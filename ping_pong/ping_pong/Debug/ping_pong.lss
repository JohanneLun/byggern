
ping_pong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000888  0000091c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000888  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800110  00800110  0000092c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000092c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  0000095c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000756  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003ab  00000000  00000000  0000117a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b1  00000000  00000000  00001525  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000017c  00000000  00000000  000018d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000288  00000000  00000000  00001a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000031e  00000000  00000000  00001cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00001ffa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__vector_3>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__data_load_end+0x2aa>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	11 e0       	ldi	r17, 0x01	; 1
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	e8 e8       	ldi	r30, 0x88	; 136
 37c:	f8 e0       	ldi	r31, 0x08	; 8
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a0 31       	cpi	r26, 0x10	; 16
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	a0 e1       	ldi	r26, 0x10	; 16
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	af 31       	cpi	r26, 0x1F	; 31
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 87 02 	call	0x50e	; 0x50e <main>
 39e:	0c 94 42 04 	jmp	0x884	; 0x884 <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <UART_transmit>:

int UART_transmit(unsigned char data, FILE *stream){
	
	//Wait for empty transmit buffer
	
	while( !( UCSR0A & (1<<UDRE0)) );
 3a6:	5d 9b       	sbis	0x0b, 5	; 11
 3a8:	fe cf       	rjmp	.-4      	; 0x3a6 <UART_transmit>
 
	//Put data into buffer, sends the data
 
	UDR0 = data;
 3aa:	8c b9       	out	0x0c, r24	; 12
	return 0; 
}
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	08 95       	ret

000003b2 <UART_receive>:

unsigned char UART_receive(){

	//Wait for data to be received

	while( !(UCSR0A & (1<<RXC0)) );
 3b2:	5f 9b       	sbis	0x0b, 7	; 11
 3b4:	fe cf       	rjmp	.-4      	; 0x3b2 <UART_receive>
 
	//Get and return received data from buffer
 
	return UDR0;
 3b6:	8c b1       	in	r24, 0x0c	; 12
}
 3b8:	08 95       	ret

000003ba <UART_init>:

int UART_init(unsigned int ubrr ){
/* 
Set baud rate
 */
	UBRR0L = ubrr;
 3ba:	89 b9       	out	0x09, r24	; 9

/* 
Enable receiver and transmitter
 */
	UCSR0B =(1<<RXEN0)|(1<<TXEN0);
 3bc:	88 e1       	ldi	r24, 0x18	; 24
 3be:	8a b9       	out	0x0a, r24	; 10
	
	uart = fdevopen(&UART_transmit, &UART_receive);
 3c0:	69 ed       	ldi	r22, 0xD9	; 217
 3c2:	71 e0       	ldi	r23, 0x01	; 1
 3c4:	83 ed       	ldi	r24, 0xD3	; 211
 3c6:	91 e0       	ldi	r25, 0x01	; 1
 3c8:	0e 94 ad 02 	call	0x55a	; 0x55a <fdevopen>
 3cc:	90 93 14 01 	sts	0x0114, r25
 3d0:	80 93 13 01 	sts	0x0113, r24
	
	return 0; 
}
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	08 95       	ret

000003da <OLED_print>:
	
}


void OLED_print(unsigned char c)
{
 3da:	28 e0       	ldi	r18, 0x08	; 8
 3dc:	82 9f       	mul	r24, r18
 3de:	c0 01       	movw	r24, r0
 3e0:	11 24       	eor	r1, r1
 3e2:	fc 01       	movw	r30, r24
 3e4:	e0 59       	subi	r30, 0x90	; 144
 3e6:	f0 40       	sbci	r31, 0x00	; 0
	for(int i = 0; i < 8; i++)
 3e8:	20 e0       	ldi	r18, 0x00	; 0
 3ea:	30 e0       	ldi	r19, 0x00	; 0
	{
		*ext_oled_data = (pgm_read_byte(&(font8[c - ASCII_OFFSET][i])));
 3ec:	a0 e0       	ldi	r26, 0x00	; 0
 3ee:	b2 e1       	ldi	r27, 0x12	; 18
 3f0:	84 91       	lpm	r24, Z
 3f2:	8c 93       	st	X, r24
}


void OLED_print(unsigned char c)
{
	for(int i = 0; i < 8; i++)
 3f4:	2f 5f       	subi	r18, 0xFF	; 255
 3f6:	3f 4f       	sbci	r19, 0xFF	; 255
 3f8:	31 96       	adiw	r30, 0x01	; 1
 3fa:	28 30       	cpi	r18, 0x08	; 8
 3fc:	31 05       	cpc	r19, r1
 3fe:	c1 f7       	brne	.-16     	; 0x3f0 <OLED_print+0x16>
	{
		*ext_oled_data = (pgm_read_byte(&(font8[c - ASCII_OFFSET][i])));
	}
	
	//Fra studass: writeData(~pgm_read_byte(&myfont[oledRam[page][col] - ASCII_OFFSET][i]))
}
 400:	08 95       	ret

00000402 <OLED_home>:
		*ext_oled_data = 0;
	}
}

void OLED_home(void){
	PAGE = 0;
 402:	10 92 11 01 	sts	0x0111, r1
	COLUMN = 0;
 406:	10 92 10 01 	sts	0x0110, r1
 40a:	08 95       	ret

0000040c <OLED_goto_page>:
}

void OLED_goto_page(uint8_t page){
	PAGE = page;
 40c:	80 93 11 01 	sts	0x0111, r24
	page = page + 0xb0;
 410:	80 55       	subi	r24, 0x50	; 80

	*ext_oled_cmd = page;
 412:	e0 e0       	ldi	r30, 0x00	; 0
 414:	f0 e1       	ldi	r31, 0x10	; 16
 416:	80 83       	st	Z, r24
	*ext_oled_cmd = 0x00;
 418:	10 82       	st	Z, r1
	*ext_oled_cmd = 0x10;
 41a:	80 e1       	ldi	r24, 0x10	; 16
 41c:	80 83       	st	Z, r24
 41e:	08 95       	ret

00000420 <OLED_clear_page>:
	}
	OLED_home();
}

void OLED_clear_page(uint8_t page){
	OLED_goto_page(page);
 420:	0e 94 06 02 	call	0x40c	; 0x40c <OLED_goto_page>
 424:	80 e8       	ldi	r24, 0x80	; 128
 426:	90 e0       	ldi	r25, 0x00	; 0
	for (int i = 0; i < 128; i++)
	{
		*ext_oled_data = 0;
 428:	e0 e0       	ldi	r30, 0x00	; 0
 42a:	f2 e1       	ldi	r31, 0x12	; 18
 42c:	10 82       	st	Z, r1
 42e:	01 97       	sbiw	r24, 0x01	; 1
	OLED_home();
}

void OLED_clear_page(uint8_t page){
	OLED_goto_page(page);
	for (int i = 0; i < 128; i++)
 430:	00 97       	sbiw	r24, 0x00	; 0
 432:	e1 f7       	brne	.-8      	; 0x42c <OLED_clear_page+0xc>
	{
		*ext_oled_data = 0;
	}
}
 434:	08 95       	ret

00000436 <OLED_reset>:
	}
	
	//Fra studass: writeData(~pgm_read_byte(&myfont[oledRam[page][col] - ASCII_OFFSET][i]))
}

void OLED_reset(){
 436:	cf 93       	push	r28
	OLED_home();
 438:	0e 94 01 02 	call	0x402	; 0x402 <OLED_home>
	for (uint8_t page = 0; page < 8; page++)
 43c:	c0 e0       	ldi	r28, 0x00	; 0
	{
		OLED_clear_page(page);
 43e:	8c 2f       	mov	r24, r28
 440:	0e 94 10 02 	call	0x420	; 0x420 <OLED_clear_page>
	//Fra studass: writeData(~pgm_read_byte(&myfont[oledRam[page][col] - ASCII_OFFSET][i]))
}

void OLED_reset(){
	OLED_home();
	for (uint8_t page = 0; page < 8; page++)
 444:	cf 5f       	subi	r28, 0xFF	; 255
 446:	c8 30       	cpi	r28, 0x08	; 8
 448:	d1 f7       	brne	.-12     	; 0x43e <OLED_reset+0x8>
	{
		OLED_clear_page(page);
	}
	OLED_home();
 44a:	0e 94 01 02 	call	0x402	; 0x402 <OLED_home>
}
 44e:	cf 91       	pop	r28
 450:	08 95       	ret

00000452 <OLED_init>:


void OLED_init(void){
	volatile char *adresse = ext_oled_cmd;
	
	*adresse = (0xae);        //display  off
 452:	e0 e0       	ldi	r30, 0x00	; 0
 454:	f0 e1       	ldi	r31, 0x10	; 16
 456:	8e ea       	ldi	r24, 0xAE	; 174
 458:	80 83       	st	Z, r24
	*adresse = (0xa1);        //segment  remap
 45a:	81 ea       	ldi	r24, 0xA1	; 161
 45c:	80 83       	st	Z, r24
	*adresse = (0xda);        //common  pads  hardware:  alternative
 45e:	8a ed       	ldi	r24, 0xDA	; 218
 460:	80 83       	st	Z, r24
	*adresse = (0x12);
 462:	82 e1       	ldi	r24, 0x12	; 18
 464:	80 83       	st	Z, r24
	*adresse = (0xc8);        //common output scan direction:com63~com0
 466:	88 ec       	ldi	r24, 0xC8	; 200
 468:	80 83       	st	Z, r24
	*adresse = (0xa8);        //multiplex  ration  mode:63
 46a:	88 ea       	ldi	r24, 0xA8	; 168
 46c:	80 83       	st	Z, r24
	*adresse = (0x3f);
 46e:	8f e3       	ldi	r24, 0x3F	; 63
 470:	80 83       	st	Z, r24
	*adresse = (0xd5);        //display divide ratio/osc. freq. mode
 472:	85 ed       	ldi	r24, 0xD5	; 213
 474:	80 83       	st	Z, r24
	*adresse = (0x80);
 476:	80 e8       	ldi	r24, 0x80	; 128
 478:	80 83       	st	Z, r24
	*adresse = (0x81);        //contrast  control
 47a:	81 e8       	ldi	r24, 0x81	; 129
 47c:	80 83       	st	Z, r24
	*adresse = (0x50);
 47e:	80 e5       	ldi	r24, 0x50	; 80
 480:	80 83       	st	Z, r24
	*adresse = (0xd9);        //set  pre-charge  period
 482:	89 ed       	ldi	r24, 0xD9	; 217
 484:	80 83       	st	Z, r24
	*adresse = (0x21);
 486:	81 e2       	ldi	r24, 0x21	; 33
 488:	80 83       	st	Z, r24
	*adresse = (0x20);        //Set  Memory  Addressing  Mode
 48a:	80 e2       	ldi	r24, 0x20	; 32
 48c:	80 83       	st	Z, r24
	*adresse = (0x02);
 48e:	82 e0       	ldi	r24, 0x02	; 2
 490:	80 83       	st	Z, r24
	*adresse = (0xdb);        //VCOM  deselect  level  mode
 492:	8b ed       	ldi	r24, 0xDB	; 219
 494:	80 83       	st	Z, r24
	*adresse = (0x30);
 496:	80 e3       	ldi	r24, 0x30	; 48
 498:	80 83       	st	Z, r24
	*adresse = (0xad);        //master  configuration
 49a:	8d ea       	ldi	r24, 0xAD	; 173
 49c:	80 83       	st	Z, r24
	*adresse = (0x00);
 49e:	10 82       	st	Z, r1
	*adresse = (0xa4);        //out  follows  RAM  content
 4a0:	84 ea       	ldi	r24, 0xA4	; 164
 4a2:	80 83       	st	Z, r24
	*adresse = (0xa6);        //set  normal  display
 4a4:	86 ea       	ldi	r24, 0xA6	; 166
 4a6:	80 83       	st	Z, r24
	*adresse = (0xaf);        //  display  on
 4a8:	8f ea       	ldi	r24, 0xAF	; 175
 4aa:	80 83       	st	Z, r24
	
	*adresse = (0x00);  //lower colums start adressing
 4ac:	10 82       	st	Z, r1
	*adresse = (0x10);  //higher column start adressing
 4ae:	80 e1       	ldi	r24, 0x10	; 16
 4b0:	80 83       	st	Z, r24
	OLED_reset();
 4b2:	0e 94 1b 02 	call	0x436	; 0x436 <OLED_reset>
	OLED_home();
 4b6:	0e 94 01 02 	call	0x402	; 0x402 <OLED_home>
 4ba:	08 95       	ret

000004bc <OLED_print_str>:
void OLED_pos(uint8_t page, uint8_t col){
	OLED_goto_page(page);
	OLED_goto_column(col);
}

void OLED_print_str(const char* data){
 4bc:	ef 92       	push	r14
 4be:	ff 92       	push	r15
 4c0:	0f 93       	push	r16
 4c2:	1f 93       	push	r17
 4c4:	cf 93       	push	r28
 4c6:	df 93       	push	r29
 4c8:	8c 01       	movw	r16, r24
 4ca:	7c 01       	movw	r14, r24
	for (int i = 0; i<strlen(data); i++)
 4cc:	c0 e0       	ldi	r28, 0x00	; 0
 4ce:	d0 e0       	ldi	r29, 0x00	; 0
 4d0:	06 c0       	rjmp	.+12     	; 0x4de <OLED_print_str+0x22>
	
	{	

		OLED_print(data[i]);
 4d2:	f7 01       	movw	r30, r14
 4d4:	81 91       	ld	r24, Z+
 4d6:	7f 01       	movw	r14, r30
 4d8:	0e 94 ed 01 	call	0x3da	; 0x3da <OLED_print>
	OLED_goto_page(page);
	OLED_goto_column(col);
}

void OLED_print_str(const char* data){
	for (int i = 0; i<strlen(data); i++)
 4dc:	21 96       	adiw	r28, 0x01	; 1
 4de:	f8 01       	movw	r30, r16
 4e0:	01 90       	ld	r0, Z+
 4e2:	00 20       	and	r0, r0
 4e4:	e9 f7       	brne	.-6      	; 0x4e0 <OLED_print_str+0x24>
 4e6:	31 97       	sbiw	r30, 0x01	; 1
 4e8:	e0 1b       	sub	r30, r16
 4ea:	f1 0b       	sbc	r31, r17
 4ec:	ce 17       	cp	r28, r30
 4ee:	df 07       	cpc	r29, r31
 4f0:	80 f3       	brcs	.-32     	; 0x4d2 <OLED_print_str+0x16>
	{	

		OLED_print(data[i]);
	}
	
 4f2:	df 91       	pop	r29
 4f4:	cf 91       	pop	r28
 4f6:	1f 91       	pop	r17
 4f8:	0f 91       	pop	r16
 4fa:	ff 90       	pop	r15
 4fc:	ef 90       	pop	r14
 4fe:	08 95       	ret

00000500 <register_init>:
void register_init(void){


	
	//enabler SRAM i MCU
	set_bit(MCUCR, SRE);
 500:	85 b7       	in	r24, 0x35	; 53
 502:	80 68       	ori	r24, 0x80	; 128
 504:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR, XMM2);
 506:	80 b7       	in	r24, 0x30	; 48
 508:	80 62       	ori	r24, 0x20	; 32
 50a:	80 bf       	out	0x30, r24	; 48
 50c:	08 95       	ret

0000050e <main>:
volatile char *oled_cmd = 0x1000;

int main(void)
{
	// Disable global interrupts
	cli();
 50e:	f8 94       	cli
	
   UART_init(31);
 510:	8f e1       	ldi	r24, 0x1F	; 31
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	0e 94 dd 01 	call	0x3ba	; 0x3ba <UART_init>
   register_init();
 518:	0e 94 80 02 	call	0x500	; 0x500 <register_init>
   
   OLED_init();
 51c:	0e 94 29 02 	call	0x452	; 0x452 <OLED_init>

  
   // Enable global interrupts
   sei(); 
 520:	78 94       	sei
   OLED_reset();
 522:	0e 94 1b 02 	call	0x436	; 0x436 <OLED_reset>
	
	
	OLED_print_str("dat ass");
 526:	88 e0       	ldi	r24, 0x08	; 8
 528:	91 e0       	ldi	r25, 0x01	; 1
 52a:	0e 94 5e 02 	call	0x4bc	; 0x4bc <OLED_print_str>
	*oled_cmd = 1;
 52e:	e0 91 06 01 	lds	r30, 0x0106
 532:	f0 91 07 01 	lds	r31, 0x0107
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	80 83       	st	Z, r24
 53a:	ff cf       	rjmp	.-2      	; 0x53a <main+0x2c>

0000053c <__vector_3>:
	}

	return 0;
}

ISR(INT2_vect){
 53c:	1f 92       	push	r1
 53e:	0f 92       	push	r0
 540:	0f b6       	in	r0, 0x3f	; 63
 542:	0f 92       	push	r0
 544:	11 24       	eor	r1, r1
 546:	8f 93       	push	r24
	JOY_STICK = 1; 
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	80 93 12 01 	sts	0x0112, r24
	//wake up the CPU
 54e:	8f 91       	pop	r24
 550:	0f 90       	pop	r0
 552:	0f be       	out	0x3f, r0	; 63
 554:	0f 90       	pop	r0
 556:	1f 90       	pop	r1
 558:	18 95       	reti

0000055a <fdevopen>:
 55a:	0f 93       	push	r16
 55c:	1f 93       	push	r17
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	ec 01       	movw	r28, r24
 564:	8b 01       	movw	r16, r22
 566:	00 97       	sbiw	r24, 0x00	; 0
 568:	31 f4       	brne	.+12     	; 0x576 <fdevopen+0x1c>
 56a:	61 15       	cp	r22, r1
 56c:	71 05       	cpc	r23, r1
 56e:	19 f4       	brne	.+6      	; 0x576 <fdevopen+0x1c>
 570:	80 e0       	ldi	r24, 0x00	; 0
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	38 c0       	rjmp	.+112    	; 0x5e6 <fdevopen+0x8c>
 576:	6e e0       	ldi	r22, 0x0E	; 14
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <calloc>
 582:	fc 01       	movw	r30, r24
 584:	00 97       	sbiw	r24, 0x00	; 0
 586:	a1 f3       	breq	.-24     	; 0x570 <fdevopen+0x16>
 588:	80 e8       	ldi	r24, 0x80	; 128
 58a:	83 83       	std	Z+3, r24	; 0x03
 58c:	01 15       	cp	r16, r1
 58e:	11 05       	cpc	r17, r1
 590:	71 f0       	breq	.+28     	; 0x5ae <fdevopen+0x54>
 592:	13 87       	std	Z+11, r17	; 0x0b
 594:	02 87       	std	Z+10, r16	; 0x0a
 596:	81 e8       	ldi	r24, 0x81	; 129
 598:	83 83       	std	Z+3, r24	; 0x03
 59a:	80 91 15 01 	lds	r24, 0x0115
 59e:	90 91 16 01 	lds	r25, 0x0116
 5a2:	89 2b       	or	r24, r25
 5a4:	21 f4       	brne	.+8      	; 0x5ae <fdevopen+0x54>
 5a6:	f0 93 16 01 	sts	0x0116, r31
 5aa:	e0 93 15 01 	sts	0x0115, r30
 5ae:	20 97       	sbiw	r28, 0x00	; 0
 5b0:	c9 f0       	breq	.+50     	; 0x5e4 <fdevopen+0x8a>
 5b2:	d1 87       	std	Z+9, r29	; 0x09
 5b4:	c0 87       	std	Z+8, r28	; 0x08
 5b6:	83 81       	ldd	r24, Z+3	; 0x03
 5b8:	82 60       	ori	r24, 0x02	; 2
 5ba:	83 83       	std	Z+3, r24	; 0x03
 5bc:	80 91 17 01 	lds	r24, 0x0117
 5c0:	90 91 18 01 	lds	r25, 0x0118
 5c4:	89 2b       	or	r24, r25
 5c6:	71 f4       	brne	.+28     	; 0x5e4 <fdevopen+0x8a>
 5c8:	f0 93 18 01 	sts	0x0118, r31
 5cc:	e0 93 17 01 	sts	0x0117, r30
 5d0:	80 91 19 01 	lds	r24, 0x0119
 5d4:	90 91 1a 01 	lds	r25, 0x011A
 5d8:	89 2b       	or	r24, r25
 5da:	21 f4       	brne	.+8      	; 0x5e4 <fdevopen+0x8a>
 5dc:	f0 93 1a 01 	sts	0x011A, r31
 5e0:	e0 93 19 01 	sts	0x0119, r30
 5e4:	cf 01       	movw	r24, r30
 5e6:	df 91       	pop	r29
 5e8:	cf 91       	pop	r28
 5ea:	1f 91       	pop	r17
 5ec:	0f 91       	pop	r16
 5ee:	08 95       	ret

000005f0 <calloc>:
 5f0:	0f 93       	push	r16
 5f2:	1f 93       	push	r17
 5f4:	cf 93       	push	r28
 5f6:	df 93       	push	r29
 5f8:	86 9f       	mul	r24, r22
 5fa:	80 01       	movw	r16, r0
 5fc:	87 9f       	mul	r24, r23
 5fe:	10 0d       	add	r17, r0
 600:	96 9f       	mul	r25, r22
 602:	10 0d       	add	r17, r0
 604:	11 24       	eor	r1, r1
 606:	c8 01       	movw	r24, r16
 608:	0e 94 14 03 	call	0x628	; 0x628 <malloc>
 60c:	ec 01       	movw	r28, r24
 60e:	00 97       	sbiw	r24, 0x00	; 0
 610:	29 f0       	breq	.+10     	; 0x61c <calloc+0x2c>
 612:	a8 01       	movw	r20, r16
 614:	60 e0       	ldi	r22, 0x00	; 0
 616:	70 e0       	ldi	r23, 0x00	; 0
 618:	0e 94 3b 04 	call	0x876	; 0x876 <memset>
 61c:	ce 01       	movw	r24, r28
 61e:	df 91       	pop	r29
 620:	cf 91       	pop	r28
 622:	1f 91       	pop	r17
 624:	0f 91       	pop	r16
 626:	08 95       	ret

00000628 <malloc>:
 628:	cf 93       	push	r28
 62a:	df 93       	push	r29
 62c:	82 30       	cpi	r24, 0x02	; 2
 62e:	91 05       	cpc	r25, r1
 630:	10 f4       	brcc	.+4      	; 0x636 <malloc+0xe>
 632:	82 e0       	ldi	r24, 0x02	; 2
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	e0 91 1d 01 	lds	r30, 0x011D
 63a:	f0 91 1e 01 	lds	r31, 0x011E
 63e:	20 e0       	ldi	r18, 0x00	; 0
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	a0 e0       	ldi	r26, 0x00	; 0
 644:	b0 e0       	ldi	r27, 0x00	; 0
 646:	30 97       	sbiw	r30, 0x00	; 0
 648:	39 f1       	breq	.+78     	; 0x698 <malloc+0x70>
 64a:	40 81       	ld	r20, Z
 64c:	51 81       	ldd	r21, Z+1	; 0x01
 64e:	48 17       	cp	r20, r24
 650:	59 07       	cpc	r21, r25
 652:	b8 f0       	brcs	.+46     	; 0x682 <malloc+0x5a>
 654:	48 17       	cp	r20, r24
 656:	59 07       	cpc	r21, r25
 658:	71 f4       	brne	.+28     	; 0x676 <malloc+0x4e>
 65a:	82 81       	ldd	r24, Z+2	; 0x02
 65c:	93 81       	ldd	r25, Z+3	; 0x03
 65e:	10 97       	sbiw	r26, 0x00	; 0
 660:	29 f0       	breq	.+10     	; 0x66c <malloc+0x44>
 662:	13 96       	adiw	r26, 0x03	; 3
 664:	9c 93       	st	X, r25
 666:	8e 93       	st	-X, r24
 668:	12 97       	sbiw	r26, 0x02	; 2
 66a:	2c c0       	rjmp	.+88     	; 0x6c4 <malloc+0x9c>
 66c:	90 93 1e 01 	sts	0x011E, r25
 670:	80 93 1d 01 	sts	0x011D, r24
 674:	27 c0       	rjmp	.+78     	; 0x6c4 <malloc+0x9c>
 676:	21 15       	cp	r18, r1
 678:	31 05       	cpc	r19, r1
 67a:	31 f0       	breq	.+12     	; 0x688 <malloc+0x60>
 67c:	42 17       	cp	r20, r18
 67e:	53 07       	cpc	r21, r19
 680:	18 f0       	brcs	.+6      	; 0x688 <malloc+0x60>
 682:	a9 01       	movw	r20, r18
 684:	db 01       	movw	r26, r22
 686:	01 c0       	rjmp	.+2      	; 0x68a <malloc+0x62>
 688:	ef 01       	movw	r28, r30
 68a:	9a 01       	movw	r18, r20
 68c:	bd 01       	movw	r22, r26
 68e:	df 01       	movw	r26, r30
 690:	02 80       	ldd	r0, Z+2	; 0x02
 692:	f3 81       	ldd	r31, Z+3	; 0x03
 694:	e0 2d       	mov	r30, r0
 696:	d7 cf       	rjmp	.-82     	; 0x646 <malloc+0x1e>
 698:	21 15       	cp	r18, r1
 69a:	31 05       	cpc	r19, r1
 69c:	f9 f0       	breq	.+62     	; 0x6dc <malloc+0xb4>
 69e:	28 1b       	sub	r18, r24
 6a0:	39 0b       	sbc	r19, r25
 6a2:	24 30       	cpi	r18, 0x04	; 4
 6a4:	31 05       	cpc	r19, r1
 6a6:	80 f4       	brcc	.+32     	; 0x6c8 <malloc+0xa0>
 6a8:	8a 81       	ldd	r24, Y+2	; 0x02
 6aa:	9b 81       	ldd	r25, Y+3	; 0x03
 6ac:	61 15       	cp	r22, r1
 6ae:	71 05       	cpc	r23, r1
 6b0:	21 f0       	breq	.+8      	; 0x6ba <malloc+0x92>
 6b2:	fb 01       	movw	r30, r22
 6b4:	93 83       	std	Z+3, r25	; 0x03
 6b6:	82 83       	std	Z+2, r24	; 0x02
 6b8:	04 c0       	rjmp	.+8      	; 0x6c2 <malloc+0x9a>
 6ba:	90 93 1e 01 	sts	0x011E, r25
 6be:	80 93 1d 01 	sts	0x011D, r24
 6c2:	fe 01       	movw	r30, r28
 6c4:	32 96       	adiw	r30, 0x02	; 2
 6c6:	44 c0       	rjmp	.+136    	; 0x750 <malloc+0x128>
 6c8:	fe 01       	movw	r30, r28
 6ca:	e2 0f       	add	r30, r18
 6cc:	f3 1f       	adc	r31, r19
 6ce:	81 93       	st	Z+, r24
 6d0:	91 93       	st	Z+, r25
 6d2:	22 50       	subi	r18, 0x02	; 2
 6d4:	31 09       	sbc	r19, r1
 6d6:	39 83       	std	Y+1, r19	; 0x01
 6d8:	28 83       	st	Y, r18
 6da:	3a c0       	rjmp	.+116    	; 0x750 <malloc+0x128>
 6dc:	20 91 1b 01 	lds	r18, 0x011B
 6e0:	30 91 1c 01 	lds	r19, 0x011C
 6e4:	23 2b       	or	r18, r19
 6e6:	41 f4       	brne	.+16     	; 0x6f8 <malloc+0xd0>
 6e8:	20 91 02 01 	lds	r18, 0x0102
 6ec:	30 91 03 01 	lds	r19, 0x0103
 6f0:	30 93 1c 01 	sts	0x011C, r19
 6f4:	20 93 1b 01 	sts	0x011B, r18
 6f8:	20 91 00 01 	lds	r18, 0x0100
 6fc:	30 91 01 01 	lds	r19, 0x0101
 700:	21 15       	cp	r18, r1
 702:	31 05       	cpc	r19, r1
 704:	41 f4       	brne	.+16     	; 0x716 <malloc+0xee>
 706:	2d b7       	in	r18, 0x3d	; 61
 708:	3e b7       	in	r19, 0x3e	; 62
 70a:	40 91 04 01 	lds	r20, 0x0104
 70e:	50 91 05 01 	lds	r21, 0x0105
 712:	24 1b       	sub	r18, r20
 714:	35 0b       	sbc	r19, r21
 716:	e0 91 1b 01 	lds	r30, 0x011B
 71a:	f0 91 1c 01 	lds	r31, 0x011C
 71e:	e2 17       	cp	r30, r18
 720:	f3 07       	cpc	r31, r19
 722:	a0 f4       	brcc	.+40     	; 0x74c <malloc+0x124>
 724:	2e 1b       	sub	r18, r30
 726:	3f 0b       	sbc	r19, r31
 728:	28 17       	cp	r18, r24
 72a:	39 07       	cpc	r19, r25
 72c:	78 f0       	brcs	.+30     	; 0x74c <malloc+0x124>
 72e:	ac 01       	movw	r20, r24
 730:	4e 5f       	subi	r20, 0xFE	; 254
 732:	5f 4f       	sbci	r21, 0xFF	; 255
 734:	24 17       	cp	r18, r20
 736:	35 07       	cpc	r19, r21
 738:	48 f0       	brcs	.+18     	; 0x74c <malloc+0x124>
 73a:	4e 0f       	add	r20, r30
 73c:	5f 1f       	adc	r21, r31
 73e:	50 93 1c 01 	sts	0x011C, r21
 742:	40 93 1b 01 	sts	0x011B, r20
 746:	81 93       	st	Z+, r24
 748:	91 93       	st	Z+, r25
 74a:	02 c0       	rjmp	.+4      	; 0x750 <malloc+0x128>
 74c:	e0 e0       	ldi	r30, 0x00	; 0
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	cf 01       	movw	r24, r30
 752:	df 91       	pop	r29
 754:	cf 91       	pop	r28
 756:	08 95       	ret

00000758 <free>:
 758:	cf 93       	push	r28
 75a:	df 93       	push	r29
 75c:	00 97       	sbiw	r24, 0x00	; 0
 75e:	09 f4       	brne	.+2      	; 0x762 <free+0xa>
 760:	87 c0       	rjmp	.+270    	; 0x870 <free+0x118>
 762:	fc 01       	movw	r30, r24
 764:	32 97       	sbiw	r30, 0x02	; 2
 766:	13 82       	std	Z+3, r1	; 0x03
 768:	12 82       	std	Z+2, r1	; 0x02
 76a:	c0 91 1d 01 	lds	r28, 0x011D
 76e:	d0 91 1e 01 	lds	r29, 0x011E
 772:	20 97       	sbiw	r28, 0x00	; 0
 774:	81 f4       	brne	.+32     	; 0x796 <free+0x3e>
 776:	20 81       	ld	r18, Z
 778:	31 81       	ldd	r19, Z+1	; 0x01
 77a:	28 0f       	add	r18, r24
 77c:	39 1f       	adc	r19, r25
 77e:	80 91 1b 01 	lds	r24, 0x011B
 782:	90 91 1c 01 	lds	r25, 0x011C
 786:	82 17       	cp	r24, r18
 788:	93 07       	cpc	r25, r19
 78a:	79 f5       	brne	.+94     	; 0x7ea <free+0x92>
 78c:	f0 93 1c 01 	sts	0x011C, r31
 790:	e0 93 1b 01 	sts	0x011B, r30
 794:	6d c0       	rjmp	.+218    	; 0x870 <free+0x118>
 796:	de 01       	movw	r26, r28
 798:	20 e0       	ldi	r18, 0x00	; 0
 79a:	30 e0       	ldi	r19, 0x00	; 0
 79c:	ae 17       	cp	r26, r30
 79e:	bf 07       	cpc	r27, r31
 7a0:	50 f4       	brcc	.+20     	; 0x7b6 <free+0x5e>
 7a2:	12 96       	adiw	r26, 0x02	; 2
 7a4:	4d 91       	ld	r20, X+
 7a6:	5c 91       	ld	r21, X
 7a8:	13 97       	sbiw	r26, 0x03	; 3
 7aa:	9d 01       	movw	r18, r26
 7ac:	41 15       	cp	r20, r1
 7ae:	51 05       	cpc	r21, r1
 7b0:	09 f1       	breq	.+66     	; 0x7f4 <free+0x9c>
 7b2:	da 01       	movw	r26, r20
 7b4:	f3 cf       	rjmp	.-26     	; 0x79c <free+0x44>
 7b6:	b3 83       	std	Z+3, r27	; 0x03
 7b8:	a2 83       	std	Z+2, r26	; 0x02
 7ba:	40 81       	ld	r20, Z
 7bc:	51 81       	ldd	r21, Z+1	; 0x01
 7be:	84 0f       	add	r24, r20
 7c0:	95 1f       	adc	r25, r21
 7c2:	8a 17       	cp	r24, r26
 7c4:	9b 07       	cpc	r25, r27
 7c6:	71 f4       	brne	.+28     	; 0x7e4 <free+0x8c>
 7c8:	8d 91       	ld	r24, X+
 7ca:	9c 91       	ld	r25, X
 7cc:	11 97       	sbiw	r26, 0x01	; 1
 7ce:	84 0f       	add	r24, r20
 7d0:	95 1f       	adc	r25, r21
 7d2:	02 96       	adiw	r24, 0x02	; 2
 7d4:	91 83       	std	Z+1, r25	; 0x01
 7d6:	80 83       	st	Z, r24
 7d8:	12 96       	adiw	r26, 0x02	; 2
 7da:	8d 91       	ld	r24, X+
 7dc:	9c 91       	ld	r25, X
 7de:	13 97       	sbiw	r26, 0x03	; 3
 7e0:	93 83       	std	Z+3, r25	; 0x03
 7e2:	82 83       	std	Z+2, r24	; 0x02
 7e4:	21 15       	cp	r18, r1
 7e6:	31 05       	cpc	r19, r1
 7e8:	29 f4       	brne	.+10     	; 0x7f4 <free+0x9c>
 7ea:	f0 93 1e 01 	sts	0x011E, r31
 7ee:	e0 93 1d 01 	sts	0x011D, r30
 7f2:	3e c0       	rjmp	.+124    	; 0x870 <free+0x118>
 7f4:	d9 01       	movw	r26, r18
 7f6:	13 96       	adiw	r26, 0x03	; 3
 7f8:	fc 93       	st	X, r31
 7fa:	ee 93       	st	-X, r30
 7fc:	12 97       	sbiw	r26, 0x02	; 2
 7fe:	4d 91       	ld	r20, X+
 800:	5d 91       	ld	r21, X+
 802:	a4 0f       	add	r26, r20
 804:	b5 1f       	adc	r27, r21
 806:	ea 17       	cp	r30, r26
 808:	fb 07       	cpc	r31, r27
 80a:	79 f4       	brne	.+30     	; 0x82a <free+0xd2>
 80c:	80 81       	ld	r24, Z
 80e:	91 81       	ldd	r25, Z+1	; 0x01
 810:	84 0f       	add	r24, r20
 812:	95 1f       	adc	r25, r21
 814:	02 96       	adiw	r24, 0x02	; 2
 816:	d9 01       	movw	r26, r18
 818:	11 96       	adiw	r26, 0x01	; 1
 81a:	9c 93       	st	X, r25
 81c:	8e 93       	st	-X, r24
 81e:	82 81       	ldd	r24, Z+2	; 0x02
 820:	93 81       	ldd	r25, Z+3	; 0x03
 822:	13 96       	adiw	r26, 0x03	; 3
 824:	9c 93       	st	X, r25
 826:	8e 93       	st	-X, r24
 828:	12 97       	sbiw	r26, 0x02	; 2
 82a:	e0 e0       	ldi	r30, 0x00	; 0
 82c:	f0 e0       	ldi	r31, 0x00	; 0
 82e:	8a 81       	ldd	r24, Y+2	; 0x02
 830:	9b 81       	ldd	r25, Y+3	; 0x03
 832:	00 97       	sbiw	r24, 0x00	; 0
 834:	19 f0       	breq	.+6      	; 0x83c <free+0xe4>
 836:	fe 01       	movw	r30, r28
 838:	ec 01       	movw	r28, r24
 83a:	f9 cf       	rjmp	.-14     	; 0x82e <free+0xd6>
 83c:	ce 01       	movw	r24, r28
 83e:	02 96       	adiw	r24, 0x02	; 2
 840:	28 81       	ld	r18, Y
 842:	39 81       	ldd	r19, Y+1	; 0x01
 844:	82 0f       	add	r24, r18
 846:	93 1f       	adc	r25, r19
 848:	20 91 1b 01 	lds	r18, 0x011B
 84c:	30 91 1c 01 	lds	r19, 0x011C
 850:	28 17       	cp	r18, r24
 852:	39 07       	cpc	r19, r25
 854:	69 f4       	brne	.+26     	; 0x870 <free+0x118>
 856:	30 97       	sbiw	r30, 0x00	; 0
 858:	29 f4       	brne	.+10     	; 0x864 <free+0x10c>
 85a:	10 92 1e 01 	sts	0x011E, r1
 85e:	10 92 1d 01 	sts	0x011D, r1
 862:	02 c0       	rjmp	.+4      	; 0x868 <free+0x110>
 864:	13 82       	std	Z+3, r1	; 0x03
 866:	12 82       	std	Z+2, r1	; 0x02
 868:	d0 93 1c 01 	sts	0x011C, r29
 86c:	c0 93 1b 01 	sts	0x011B, r28
 870:	df 91       	pop	r29
 872:	cf 91       	pop	r28
 874:	08 95       	ret

00000876 <memset>:
 876:	dc 01       	movw	r26, r24
 878:	01 c0       	rjmp	.+2      	; 0x87c <memset+0x6>
 87a:	6d 93       	st	X+, r22
 87c:	41 50       	subi	r20, 0x01	; 1
 87e:	50 40       	sbci	r21, 0x00	; 0
 880:	e0 f7       	brcc	.-8      	; 0x87a <memset+0x4>
 882:	08 95       	ret

00000884 <_exit>:
 884:	f8 94       	cli

00000886 <__stop_program>:
 886:	ff cf       	rjmp	.-2      	; 0x886 <__stop_program>

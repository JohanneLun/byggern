
ping_pong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f4  00800100  00000cac  00000d40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  008001f4  008001f4  00000e34  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e34  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000049e  00000000  00000000  00000f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002c0  00000000  00000000  000013a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a9  00000000  00000000  00001666  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000118  00000000  00000000  00001910  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000201  00000000  00000000  00001a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000022e  00000000  00000000  00001c29  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00001e57  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec ea       	ldi	r30, 0xAC	; 172
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 3f       	cpi	r26, 0xF4	; 244
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	a4 ef       	ldi	r26, 0xF4	; 244
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 30       	cpi	r26, 0x00	; 0
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
  a6:	0c 94 54 06 	jmp	0xca8	; 0xca8 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <UART_transmit>:

int UART_transmit(unsigned char data, FILE *stream){
	
	//Wait for empty transmit buffer
	
	while( !( UCSR0A & (1<<UDRE0)) );
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <UART_transmit>
 
	//Put data into buffer, sends the data
 
	UDR0 = data;
  b2:	8c b9       	out	0x0c, r24	; 12
	return 0; 
}
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	08 95       	ret

000000ba <UART_receive>:

unsigned char UART_receive(){

	//Wait for data to be received

	while( !(UCSR0A & (1<<RXC0)) );
  ba:	5f 9b       	sbis	0x0b, 7	; 11
  bc:	fe cf       	rjmp	.-4      	; 0xba <UART_receive>
 
	//Get and return received data from buffer
 
	return UDR0;
  be:	8c b1       	in	r24, 0x0c	; 12
}
  c0:	08 95       	ret

000000c2 <UART_init>:

int UART_init(unsigned int ubrr ){
/* 
Set baud rate
 */
	UBRR0L = ubrr;
  c2:	89 b9       	out	0x09, r24	; 9

/* 
Enable receiver and transmitter
 */
	UCSR0B =(1<<RXEN0)|(1<<TXEN0);
  c4:	88 e1       	ldi	r24, 0x18	; 24
  c6:	8a b9       	out	0x0a, r24	; 10
	
	uart = fdevopen(&UART_transmit, &UART_receive);
  c8:	6d e5       	ldi	r22, 0x5D	; 93
  ca:	70 e0       	ldi	r23, 0x00	; 0
  cc:	87 e5       	ldi	r24, 0x57	; 87
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <fdevopen>
  d4:	90 93 f5 01 	sts	0x01F5, r25
  d8:	80 93 f4 01 	sts	0x01F4, r24
	
	return 0; 
}
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	08 95       	ret

000000e2 <main>:
#include "bit_functions.h"

int main(void)
{
	
   UART_init(31);
  e2:	8f e1       	ldi	r24, 0x1F	; 31
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 61 00 	call	0xc2	; 0xc2 <UART_init>
   
   set_bit(DDRA,PA7);
  ea:	d7 9a       	sbi	0x1a, 7	; 26
   set_bit(DDRE, DDE1);
  ec:	31 9a       	sbi	0x06, 1	; 6
   set_bit(PORTE, PE1);	
  ee:	39 9a       	sbi	0x07, 1	; 7
   
   //enabler SRAM i MCU
   set_bit(MCUCR, SRE);
  f0:	85 b7       	in	r24, 0x35	; 53
  f2:	80 68       	ori	r24, 0x80	; 128
  f4:	85 bf       	out	0x35, r24	; 53
   set_bit(SFIOR, XMM0);
  f6:	80 b7       	in	r24, 0x30	; 48
  f8:	88 60       	ori	r24, 0x08	; 8
  fa:	80 bf       	out	0x30, r24	; 48
   
   
   SRAM_test();
  fc:	0e 94 81 00 	call	0x102	; 0x102 <SRAM_test>
 100:	ff cf       	rjmp	.-2      	; 0x100 <main+0x1e>

00000102 <SRAM_test>:
#include <stdlib.h>

#include <avr/io.h>
#include "sram_test.h"

void SRAM_test(void) {
 102:	cf 92       	push	r12
 104:	df 92       	push	r13
 106:	ef 92       	push	r14
 108:	ff 92       	push	r15
 10a:	0f 93       	push	r16
 10c:	1f 93       	push	r17
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
	printf("here");
 112:	8a e0       	ldi	r24, 0x0A	; 10
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	9f 93       	push	r25
 118:	8f 93       	push	r24
 11a:	0e 94 b7 01 	call	0x36e	; 0x36e <printf>
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM 
	uint16_t ext_ram_size = 0x800; 
	uint16_t write_errors = 0; 
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
 11e:	8f e0       	ldi	r24, 0x0F	; 15
 120:	91 e0       	ldi	r25, 0x01	; 1
 122:	0e 94 cb 01 	call	0x396	; 0x396 <puts>
	// rand() stores some internal state, so calling this function in a loop will 
	// yield different seeds each time (unless srand() is called before this function) 
	uint16_t seed = rand();
 126:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <rand>
 12a:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed); 
 12c:	0e 94 61 01 	call	0x2c2	; 0x2c2 <srand>
 130:	0f 90       	pop	r0
 132:	0f 90       	pop	r0
	for (uint16_t i = 0; i < ext_ram_size; i++) { 
 134:	c0 e0       	ldi	r28, 0x00	; 0
 136:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void) {
	printf("here");
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM 
	uint16_t ext_ram_size = 0x800; 
	uint16_t write_errors = 0; 
 138:	00 e0       	ldi	r16, 0x00	; 0
 13a:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) { 
		uint8_t some_value = rand(); 
		ext_ram[i] = some_value; 
		uint8_t retreived_value = ext_ram[i]; 
		if (retreived_value != some_value) { 
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
 13c:	0f 2e       	mov	r0, r31
 13e:	f5 e2       	ldi	r31, 0x25	; 37
 140:	ef 2e       	mov	r14, r31
 142:	f1 e0       	ldi	r31, 0x01	; 1
 144:	ff 2e       	mov	r15, r31
 146:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function) 
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed); 
	for (uint16_t i = 0; i < ext_ram_size; i++) { 
		uint8_t some_value = rand(); 
 148:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <rand>
 14c:	fe 01       	movw	r30, r28
 14e:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value; 
 150:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i]; 
 152:	20 81       	ld	r18, Z
		if (retreived_value != some_value) { 
 154:	28 17       	cp	r18, r24
 156:	a9 f0       	breq	.+42     	; 0x182 <SRAM_test+0x80>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
 158:	99 27       	eor	r25, r25
 15a:	9f 93       	push	r25
 15c:	8f 93       	push	r24
 15e:	1f 92       	push	r1
 160:	2f 93       	push	r18
 162:	df 93       	push	r29
 164:	cf 93       	push	r28
 166:	ff 92       	push	r15
 168:	ef 92       	push	r14
 16a:	0e 94 b7 01 	call	0x36e	; 0x36e <printf>
			write_errors++; 
 16e:	0f 5f       	subi	r16, 0xFF	; 255
 170:	1f 4f       	sbci	r17, 0xFF	; 255
 172:	8d b7       	in	r24, 0x3d	; 61
 174:	9e b7       	in	r25, 0x3e	; 62
 176:	08 96       	adiw	r24, 0x08	; 8
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	f8 94       	cli
 17c:	9e bf       	out	0x3e, r25	; 62
 17e:	0f be       	out	0x3f, r0	; 63
 180:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will 
	// yield different seeds each time (unless srand() is called before this function) 
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed); 
	for (uint16_t i = 0; i < ext_ram_size; i++) { 
 182:	21 96       	adiw	r28, 0x01	; 1
 184:	c1 15       	cp	r28, r1
 186:	98 e0       	ldi	r25, 0x08	; 8
 188:	d9 07       	cpc	r29, r25
 18a:	f1 f6       	brne	.-68     	; 0x148 <SRAM_test+0x46>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
			write_errors++; 
		} 
	}
	// Retrieval phase: Check that no values were changed during or after the write phase 
	srand(seed); // reset the PRNG to the state it had before the write phase 
 18c:	c6 01       	movw	r24, r12
 18e:	0e 94 61 01 	call	0x2c2	; 0x2c2 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) { 
 192:	c0 e0       	ldi	r28, 0x00	; 0
 194:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void) {
	printf("here");
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM 
	uint16_t ext_ram_size = 0x800; 
	uint16_t write_errors = 0; 
	uint16_t retrieval_errors = 0;
 196:	e1 2c       	mov	r14, r1
 198:	f1 2c       	mov	r15, r1
	srand(seed); // reset the PRNG to the state it had before the write phase 
	for (uint16_t i = 0; i < ext_ram_size; i++) { 
		uint8_t some_value = rand(); 
		uint8_t retreived_value = ext_ram[i]; 
		if (retreived_value != some_value) { 
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
 19a:	0f 2e       	mov	r0, r31
 19c:	fe e5       	ldi	r31, 0x5E	; 94
 19e:	cf 2e       	mov	r12, r31
 1a0:	f1 e0       	ldi	r31, 0x01	; 1
 1a2:	df 2e       	mov	r13, r31
 1a4:	f0 2d       	mov	r31, r0
		} 
	}
	// Retrieval phase: Check that no values were changed during or after the write phase 
	srand(seed); // reset the PRNG to the state it had before the write phase 
	for (uint16_t i = 0; i < ext_ram_size; i++) { 
		uint8_t some_value = rand(); 
 1a6:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <rand>
 1aa:	fe 01       	movw	r30, r28
 1ac:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i]; 
 1ae:	20 81       	ld	r18, Z
		if (retreived_value != some_value) { 
 1b0:	28 17       	cp	r18, r24
 1b2:	b1 f0       	breq	.+44     	; 0x1e0 <SRAM_test+0xde>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
 1b4:	99 27       	eor	r25, r25
 1b6:	9f 93       	push	r25
 1b8:	8f 93       	push	r24
 1ba:	1f 92       	push	r1
 1bc:	2f 93       	push	r18
 1be:	df 93       	push	r29
 1c0:	cf 93       	push	r28
 1c2:	df 92       	push	r13
 1c4:	cf 92       	push	r12
 1c6:	0e 94 b7 01 	call	0x36e	; 0x36e <printf>
			retrieval_errors++; 
 1ca:	8f ef       	ldi	r24, 0xFF	; 255
 1cc:	e8 1a       	sub	r14, r24
 1ce:	f8 0a       	sbc	r15, r24
 1d0:	8d b7       	in	r24, 0x3d	; 61
 1d2:	9e b7       	in	r25, 0x3e	; 62
 1d4:	08 96       	adiw	r24, 0x08	; 8
 1d6:	0f b6       	in	r0, 0x3f	; 63
 1d8:	f8 94       	cli
 1da:	9e bf       	out	0x3e, r25	; 62
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	8d bf       	out	0x3d, r24	; 61
			write_errors++; 
		} 
	}
	// Retrieval phase: Check that no values were changed during or after the write phase 
	srand(seed); // reset the PRNG to the state it had before the write phase 
	for (uint16_t i = 0; i < ext_ram_size; i++) { 
 1e0:	21 96       	adiw	r28, 0x01	; 1
 1e2:	c1 15       	cp	r28, r1
 1e4:	98 e0       	ldi	r25, 0x08	; 8
 1e6:	d9 07       	cpc	r29, r25
 1e8:	f1 f6       	brne	.-68     	; 0x1a6 <SRAM_test+0xa4>
		if (retreived_value != some_value) { 
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value); 
			retrieval_errors++; 
		} 
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors); 
 1ea:	ff 92       	push	r15
 1ec:	ef 92       	push	r14
 1ee:	1f 93       	push	r17
 1f0:	0f 93       	push	r16
 1f2:	8b e9       	ldi	r24, 0x9B	; 155
 1f4:	91 e0       	ldi	r25, 0x01	; 1
 1f6:	9f 93       	push	r25
 1f8:	8f 93       	push	r24
 1fa:	0e 94 b7 01 	call	0x36e	; 0x36e <printf>
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0
 208:	0f 90       	pop	r0
 20a:	df 91       	pop	r29
 20c:	cf 91       	pop	r28
 20e:	1f 91       	pop	r17
 210:	0f 91       	pop	r16
 212:	ff 90       	pop	r15
 214:	ef 90       	pop	r14
 216:	df 90       	pop	r13
 218:	cf 90       	pop	r12
 21a:	08 95       	ret

0000021c <do_rand>:
 21c:	8f 92       	push	r8
 21e:	9f 92       	push	r9
 220:	af 92       	push	r10
 222:	bf 92       	push	r11
 224:	cf 92       	push	r12
 226:	df 92       	push	r13
 228:	ef 92       	push	r14
 22a:	ff 92       	push	r15
 22c:	cf 93       	push	r28
 22e:	df 93       	push	r29
 230:	ec 01       	movw	r28, r24
 232:	68 81       	ld	r22, Y
 234:	79 81       	ldd	r23, Y+1	; 0x01
 236:	8a 81       	ldd	r24, Y+2	; 0x02
 238:	9b 81       	ldd	r25, Y+3	; 0x03
 23a:	61 15       	cp	r22, r1
 23c:	71 05       	cpc	r23, r1
 23e:	81 05       	cpc	r24, r1
 240:	91 05       	cpc	r25, r1
 242:	21 f4       	brne	.+8      	; 0x24c <do_rand+0x30>
 244:	64 e2       	ldi	r22, 0x24	; 36
 246:	79 ed       	ldi	r23, 0xD9	; 217
 248:	8b e5       	ldi	r24, 0x5B	; 91
 24a:	97 e0       	ldi	r25, 0x07	; 7
 24c:	2d e1       	ldi	r18, 0x1D	; 29
 24e:	33 ef       	ldi	r19, 0xF3	; 243
 250:	41 e0       	ldi	r20, 0x01	; 1
 252:	50 e0       	ldi	r21, 0x00	; 0
 254:	0e 94 ba 05 	call	0xb74	; 0xb74 <__divmodsi4>
 258:	49 01       	movw	r8, r18
 25a:	5a 01       	movw	r10, r20
 25c:	9b 01       	movw	r18, r22
 25e:	ac 01       	movw	r20, r24
 260:	a7 ea       	ldi	r26, 0xA7	; 167
 262:	b1 e4       	ldi	r27, 0x41	; 65
 264:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <__muluhisi3>
 268:	6b 01       	movw	r12, r22
 26a:	7c 01       	movw	r14, r24
 26c:	ac ee       	ldi	r26, 0xEC	; 236
 26e:	b4 ef       	ldi	r27, 0xF4	; 244
 270:	a5 01       	movw	r20, r10
 272:	94 01       	movw	r18, r8
 274:	0e 94 e7 05 	call	0xbce	; 0xbce <__mulohisi3>
 278:	c6 0e       	add	r12, r22
 27a:	d7 1e       	adc	r13, r23
 27c:	e8 1e       	adc	r14, r24
 27e:	f9 1e       	adc	r15, r25
 280:	f7 fe       	sbrs	r15, 7
 282:	06 c0       	rjmp	.+12     	; 0x290 <do_rand+0x74>
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	c8 1a       	sub	r12, r24
 288:	d1 08       	sbc	r13, r1
 28a:	e1 08       	sbc	r14, r1
 28c:	80 e8       	ldi	r24, 0x80	; 128
 28e:	f8 0a       	sbc	r15, r24
 290:	c8 82       	st	Y, r12
 292:	d9 82       	std	Y+1, r13	; 0x01
 294:	ea 82       	std	Y+2, r14	; 0x02
 296:	fb 82       	std	Y+3, r15	; 0x03
 298:	c6 01       	movw	r24, r12
 29a:	9f 77       	andi	r25, 0x7F	; 127
 29c:	df 91       	pop	r29
 29e:	cf 91       	pop	r28
 2a0:	ff 90       	pop	r15
 2a2:	ef 90       	pop	r14
 2a4:	df 90       	pop	r13
 2a6:	cf 90       	pop	r12
 2a8:	bf 90       	pop	r11
 2aa:	af 90       	pop	r10
 2ac:	9f 90       	pop	r9
 2ae:	8f 90       	pop	r8
 2b0:	08 95       	ret

000002b2 <rand_r>:
 2b2:	0e 94 0e 01 	call	0x21c	; 0x21c <do_rand>
 2b6:	08 95       	ret

000002b8 <rand>:
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	91 e0       	ldi	r25, 0x01	; 1
 2bc:	0e 94 0e 01 	call	0x21c	; 0x21c <do_rand>
 2c0:	08 95       	ret

000002c2 <srand>:
 2c2:	a0 e0       	ldi	r26, 0x00	; 0
 2c4:	b0 e0       	ldi	r27, 0x00	; 0
 2c6:	80 93 00 01 	sts	0x0100, r24
 2ca:	90 93 01 01 	sts	0x0101, r25
 2ce:	a0 93 02 01 	sts	0x0102, r26
 2d2:	b0 93 03 01 	sts	0x0103, r27
 2d6:	08 95       	ret

000002d8 <fdevopen>:
 2d8:	0f 93       	push	r16
 2da:	1f 93       	push	r17
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	ec 01       	movw	r28, r24
 2e2:	8b 01       	movw	r16, r22
 2e4:	00 97       	sbiw	r24, 0x00	; 0
 2e6:	31 f4       	brne	.+12     	; 0x2f4 <fdevopen+0x1c>
 2e8:	61 15       	cp	r22, r1
 2ea:	71 05       	cpc	r23, r1
 2ec:	19 f4       	brne	.+6      	; 0x2f4 <fdevopen+0x1c>
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	38 c0       	rjmp	.+112    	; 0x364 <fdevopen+0x8c>
 2f4:	6e e0       	ldi	r22, 0x0E	; 14
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	0e 94 ca 03 	call	0x794	; 0x794 <calloc>
 300:	fc 01       	movw	r30, r24
 302:	00 97       	sbiw	r24, 0x00	; 0
 304:	a1 f3       	breq	.-24     	; 0x2ee <fdevopen+0x16>
 306:	80 e8       	ldi	r24, 0x80	; 128
 308:	83 83       	std	Z+3, r24	; 0x03
 30a:	01 15       	cp	r16, r1
 30c:	11 05       	cpc	r17, r1
 30e:	71 f0       	breq	.+28     	; 0x32c <fdevopen+0x54>
 310:	13 87       	std	Z+11, r17	; 0x0b
 312:	02 87       	std	Z+10, r16	; 0x0a
 314:	81 e8       	ldi	r24, 0x81	; 129
 316:	83 83       	std	Z+3, r24	; 0x03
 318:	80 91 f6 01 	lds	r24, 0x01F6
 31c:	90 91 f7 01 	lds	r25, 0x01F7
 320:	89 2b       	or	r24, r25
 322:	21 f4       	brne	.+8      	; 0x32c <fdevopen+0x54>
 324:	f0 93 f7 01 	sts	0x01F7, r31
 328:	e0 93 f6 01 	sts	0x01F6, r30
 32c:	20 97       	sbiw	r28, 0x00	; 0
 32e:	c9 f0       	breq	.+50     	; 0x362 <fdevopen+0x8a>
 330:	d1 87       	std	Z+9, r29	; 0x09
 332:	c0 87       	std	Z+8, r28	; 0x08
 334:	83 81       	ldd	r24, Z+3	; 0x03
 336:	82 60       	ori	r24, 0x02	; 2
 338:	83 83       	std	Z+3, r24	; 0x03
 33a:	80 91 f8 01 	lds	r24, 0x01F8
 33e:	90 91 f9 01 	lds	r25, 0x01F9
 342:	89 2b       	or	r24, r25
 344:	71 f4       	brne	.+28     	; 0x362 <fdevopen+0x8a>
 346:	f0 93 f9 01 	sts	0x01F9, r31
 34a:	e0 93 f8 01 	sts	0x01F8, r30
 34e:	80 91 fa 01 	lds	r24, 0x01FA
 352:	90 91 fb 01 	lds	r25, 0x01FB
 356:	89 2b       	or	r24, r25
 358:	21 f4       	brne	.+8      	; 0x362 <fdevopen+0x8a>
 35a:	f0 93 fb 01 	sts	0x01FB, r31
 35e:	e0 93 fa 01 	sts	0x01FA, r30
 362:	cf 01       	movw	r24, r30
 364:	df 91       	pop	r29
 366:	cf 91       	pop	r28
 368:	1f 91       	pop	r17
 36a:	0f 91       	pop	r16
 36c:	08 95       	ret

0000036e <printf>:
 36e:	a0 e0       	ldi	r26, 0x00	; 0
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	ed eb       	ldi	r30, 0xBD	; 189
 374:	f1 e0       	ldi	r31, 0x01	; 1
 376:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <__prologue_saves__+0x20>
 37a:	fe 01       	movw	r30, r28
 37c:	35 96       	adiw	r30, 0x05	; 5
 37e:	61 91       	ld	r22, Z+
 380:	71 91       	ld	r23, Z+
 382:	af 01       	movw	r20, r30
 384:	80 91 f8 01 	lds	r24, 0x01F8
 388:	90 91 f9 01 	lds	r25, 0x01F9
 38c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <vfprintf>
 390:	e2 e0       	ldi	r30, 0x02	; 2
 392:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__epilogue_restores__+0x20>

00000396 <puts>:
 396:	0f 93       	push	r16
 398:	1f 93       	push	r17
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	e0 91 f8 01 	lds	r30, 0x01F8
 3a2:	f0 91 f9 01 	lds	r31, 0x01F9
 3a6:	23 81       	ldd	r18, Z+3	; 0x03
 3a8:	21 ff       	sbrs	r18, 1
 3aa:	1b c0       	rjmp	.+54     	; 0x3e2 <puts+0x4c>
 3ac:	ec 01       	movw	r28, r24
 3ae:	00 e0       	ldi	r16, 0x00	; 0
 3b0:	10 e0       	ldi	r17, 0x00	; 0
 3b2:	89 91       	ld	r24, Y+
 3b4:	60 91 f8 01 	lds	r22, 0x01F8
 3b8:	70 91 f9 01 	lds	r23, 0x01F9
 3bc:	db 01       	movw	r26, r22
 3be:	18 96       	adiw	r26, 0x08	; 8
 3c0:	ed 91       	ld	r30, X+
 3c2:	fc 91       	ld	r31, X
 3c4:	19 97       	sbiw	r26, 0x09	; 9
 3c6:	88 23       	and	r24, r24
 3c8:	31 f0       	breq	.+12     	; 0x3d6 <puts+0x40>
 3ca:	09 95       	icall
 3cc:	89 2b       	or	r24, r25
 3ce:	89 f3       	breq	.-30     	; 0x3b2 <puts+0x1c>
 3d0:	0f ef       	ldi	r16, 0xFF	; 255
 3d2:	1f ef       	ldi	r17, 0xFF	; 255
 3d4:	ee cf       	rjmp	.-36     	; 0x3b2 <puts+0x1c>
 3d6:	8a e0       	ldi	r24, 0x0A	; 10
 3d8:	09 95       	icall
 3da:	89 2b       	or	r24, r25
 3dc:	11 f4       	brne	.+4      	; 0x3e2 <puts+0x4c>
 3de:	c8 01       	movw	r24, r16
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <puts+0x50>
 3e2:	8f ef       	ldi	r24, 0xFF	; 255
 3e4:	9f ef       	ldi	r25, 0xFF	; 255
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	08 95       	ret

000003f0 <vfprintf>:
 3f0:	ac e0       	ldi	r26, 0x0C	; 12
 3f2:	b0 e0       	ldi	r27, 0x00	; 0
 3f4:	ee ef       	ldi	r30, 0xFE	; 254
 3f6:	f1 e0       	ldi	r31, 0x01	; 1
 3f8:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__prologue_saves__>
 3fc:	7c 01       	movw	r14, r24
 3fe:	6b 01       	movw	r12, r22
 400:	8a 01       	movw	r16, r20
 402:	fc 01       	movw	r30, r24
 404:	17 82       	std	Z+7, r1	; 0x07
 406:	16 82       	std	Z+6, r1	; 0x06
 408:	83 81       	ldd	r24, Z+3	; 0x03
 40a:	81 ff       	sbrs	r24, 1
 40c:	bd c1       	rjmp	.+890    	; 0x788 <__stack+0x289>
 40e:	ce 01       	movw	r24, r28
 410:	01 96       	adiw	r24, 0x01	; 1
 412:	4c 01       	movw	r8, r24
 414:	f7 01       	movw	r30, r14
 416:	93 81       	ldd	r25, Z+3	; 0x03
 418:	f6 01       	movw	r30, r12
 41a:	93 fd       	sbrc	r25, 3
 41c:	85 91       	lpm	r24, Z+
 41e:	93 ff       	sbrs	r25, 3
 420:	81 91       	ld	r24, Z+
 422:	6f 01       	movw	r12, r30
 424:	88 23       	and	r24, r24
 426:	09 f4       	brne	.+2      	; 0x42a <vfprintf+0x3a>
 428:	ab c1       	rjmp	.+854    	; 0x780 <__stack+0x281>
 42a:	85 32       	cpi	r24, 0x25	; 37
 42c:	39 f4       	brne	.+14     	; 0x43c <vfprintf+0x4c>
 42e:	93 fd       	sbrc	r25, 3
 430:	85 91       	lpm	r24, Z+
 432:	93 ff       	sbrs	r25, 3
 434:	81 91       	ld	r24, Z+
 436:	6f 01       	movw	r12, r30
 438:	85 32       	cpi	r24, 0x25	; 37
 43a:	29 f4       	brne	.+10     	; 0x446 <vfprintf+0x56>
 43c:	b7 01       	movw	r22, r14
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 444:	e7 cf       	rjmp	.-50     	; 0x414 <vfprintf+0x24>
 446:	51 2c       	mov	r5, r1
 448:	31 2c       	mov	r3, r1
 44a:	20 e0       	ldi	r18, 0x00	; 0
 44c:	20 32       	cpi	r18, 0x20	; 32
 44e:	a0 f4       	brcc	.+40     	; 0x478 <vfprintf+0x88>
 450:	8b 32       	cpi	r24, 0x2B	; 43
 452:	69 f0       	breq	.+26     	; 0x46e <vfprintf+0x7e>
 454:	30 f4       	brcc	.+12     	; 0x462 <vfprintf+0x72>
 456:	80 32       	cpi	r24, 0x20	; 32
 458:	59 f0       	breq	.+22     	; 0x470 <vfprintf+0x80>
 45a:	83 32       	cpi	r24, 0x23	; 35
 45c:	69 f4       	brne	.+26     	; 0x478 <vfprintf+0x88>
 45e:	20 61       	ori	r18, 0x10	; 16
 460:	2c c0       	rjmp	.+88     	; 0x4ba <vfprintf+0xca>
 462:	8d 32       	cpi	r24, 0x2D	; 45
 464:	39 f0       	breq	.+14     	; 0x474 <vfprintf+0x84>
 466:	80 33       	cpi	r24, 0x30	; 48
 468:	39 f4       	brne	.+14     	; 0x478 <vfprintf+0x88>
 46a:	21 60       	ori	r18, 0x01	; 1
 46c:	26 c0       	rjmp	.+76     	; 0x4ba <vfprintf+0xca>
 46e:	22 60       	ori	r18, 0x02	; 2
 470:	24 60       	ori	r18, 0x04	; 4
 472:	23 c0       	rjmp	.+70     	; 0x4ba <vfprintf+0xca>
 474:	28 60       	ori	r18, 0x08	; 8
 476:	21 c0       	rjmp	.+66     	; 0x4ba <vfprintf+0xca>
 478:	27 fd       	sbrc	r18, 7
 47a:	27 c0       	rjmp	.+78     	; 0x4ca <vfprintf+0xda>
 47c:	30 ed       	ldi	r19, 0xD0	; 208
 47e:	38 0f       	add	r19, r24
 480:	3a 30       	cpi	r19, 0x0A	; 10
 482:	78 f4       	brcc	.+30     	; 0x4a2 <vfprintf+0xb2>
 484:	26 ff       	sbrs	r18, 6
 486:	06 c0       	rjmp	.+12     	; 0x494 <vfprintf+0xa4>
 488:	fa e0       	ldi	r31, 0x0A	; 10
 48a:	5f 9e       	mul	r5, r31
 48c:	30 0d       	add	r19, r0
 48e:	11 24       	eor	r1, r1
 490:	53 2e       	mov	r5, r19
 492:	13 c0       	rjmp	.+38     	; 0x4ba <vfprintf+0xca>
 494:	8a e0       	ldi	r24, 0x0A	; 10
 496:	38 9e       	mul	r3, r24
 498:	30 0d       	add	r19, r0
 49a:	11 24       	eor	r1, r1
 49c:	33 2e       	mov	r3, r19
 49e:	20 62       	ori	r18, 0x20	; 32
 4a0:	0c c0       	rjmp	.+24     	; 0x4ba <vfprintf+0xca>
 4a2:	8e 32       	cpi	r24, 0x2E	; 46
 4a4:	21 f4       	brne	.+8      	; 0x4ae <vfprintf+0xbe>
 4a6:	26 fd       	sbrc	r18, 6
 4a8:	6b c1       	rjmp	.+726    	; 0x780 <__stack+0x281>
 4aa:	20 64       	ori	r18, 0x40	; 64
 4ac:	06 c0       	rjmp	.+12     	; 0x4ba <vfprintf+0xca>
 4ae:	8c 36       	cpi	r24, 0x6C	; 108
 4b0:	11 f4       	brne	.+4      	; 0x4b6 <vfprintf+0xc6>
 4b2:	20 68       	ori	r18, 0x80	; 128
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <vfprintf+0xca>
 4b6:	88 36       	cpi	r24, 0x68	; 104
 4b8:	41 f4       	brne	.+16     	; 0x4ca <vfprintf+0xda>
 4ba:	f6 01       	movw	r30, r12
 4bc:	93 fd       	sbrc	r25, 3
 4be:	85 91       	lpm	r24, Z+
 4c0:	93 ff       	sbrs	r25, 3
 4c2:	81 91       	ld	r24, Z+
 4c4:	6f 01       	movw	r12, r30
 4c6:	81 11       	cpse	r24, r1
 4c8:	c1 cf       	rjmp	.-126    	; 0x44c <vfprintf+0x5c>
 4ca:	98 2f       	mov	r25, r24
 4cc:	9f 7d       	andi	r25, 0xDF	; 223
 4ce:	95 54       	subi	r25, 0x45	; 69
 4d0:	93 30       	cpi	r25, 0x03	; 3
 4d2:	28 f4       	brcc	.+10     	; 0x4de <vfprintf+0xee>
 4d4:	0c 5f       	subi	r16, 0xFC	; 252
 4d6:	1f 4f       	sbci	r17, 0xFF	; 255
 4d8:	ff e3       	ldi	r31, 0x3F	; 63
 4da:	f9 83       	std	Y+1, r31	; 0x01
 4dc:	0d c0       	rjmp	.+26     	; 0x4f8 <vfprintf+0x108>
 4de:	83 36       	cpi	r24, 0x63	; 99
 4e0:	31 f0       	breq	.+12     	; 0x4ee <vfprintf+0xfe>
 4e2:	83 37       	cpi	r24, 0x73	; 115
 4e4:	71 f0       	breq	.+28     	; 0x502 <__stack+0x3>
 4e6:	83 35       	cpi	r24, 0x53	; 83
 4e8:	09 f0       	breq	.+2      	; 0x4ec <vfprintf+0xfc>
 4ea:	5b c0       	rjmp	.+182    	; 0x5a2 <__stack+0xa3>
 4ec:	22 c0       	rjmp	.+68     	; 0x532 <__stack+0x33>
 4ee:	f8 01       	movw	r30, r16
 4f0:	80 81       	ld	r24, Z
 4f2:	89 83       	std	Y+1, r24	; 0x01
 4f4:	0e 5f       	subi	r16, 0xFE	; 254
 4f6:	1f 4f       	sbci	r17, 0xFF	; 255
 4f8:	44 24       	eor	r4, r4
 4fa:	43 94       	inc	r4
 4fc:	51 2c       	mov	r5, r1
 4fe:	54 01       	movw	r10, r8
 500:	15 c0       	rjmp	.+42     	; 0x52c <__stack+0x2d>
 502:	38 01       	movw	r6, r16
 504:	f2 e0       	ldi	r31, 0x02	; 2
 506:	6f 0e       	add	r6, r31
 508:	71 1c       	adc	r7, r1
 50a:	f8 01       	movw	r30, r16
 50c:	a0 80       	ld	r10, Z
 50e:	b1 80       	ldd	r11, Z+1	; 0x01
 510:	26 ff       	sbrs	r18, 6
 512:	03 c0       	rjmp	.+6      	; 0x51a <__stack+0x1b>
 514:	65 2d       	mov	r22, r5
 516:	70 e0       	ldi	r23, 0x00	; 0
 518:	02 c0       	rjmp	.+4      	; 0x51e <__stack+0x1f>
 51a:	6f ef       	ldi	r22, 0xFF	; 255
 51c:	7f ef       	ldi	r23, 0xFF	; 255
 51e:	c5 01       	movw	r24, r10
 520:	2c 87       	std	Y+12, r18	; 0x0c
 522:	0e 94 1f 05 	call	0xa3e	; 0xa3e <strnlen>
 526:	2c 01       	movw	r4, r24
 528:	83 01       	movw	r16, r6
 52a:	2c 85       	ldd	r18, Y+12	; 0x0c
 52c:	2f 77       	andi	r18, 0x7F	; 127
 52e:	22 2e       	mov	r2, r18
 530:	17 c0       	rjmp	.+46     	; 0x560 <__stack+0x61>
 532:	38 01       	movw	r6, r16
 534:	f2 e0       	ldi	r31, 0x02	; 2
 536:	6f 0e       	add	r6, r31
 538:	71 1c       	adc	r7, r1
 53a:	f8 01       	movw	r30, r16
 53c:	a0 80       	ld	r10, Z
 53e:	b1 80       	ldd	r11, Z+1	; 0x01
 540:	26 ff       	sbrs	r18, 6
 542:	03 c0       	rjmp	.+6      	; 0x54a <__stack+0x4b>
 544:	65 2d       	mov	r22, r5
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	02 c0       	rjmp	.+4      	; 0x54e <__stack+0x4f>
 54a:	6f ef       	ldi	r22, 0xFF	; 255
 54c:	7f ef       	ldi	r23, 0xFF	; 255
 54e:	c5 01       	movw	r24, r10
 550:	2c 87       	std	Y+12, r18	; 0x0c
 552:	0e 94 0d 05 	call	0xa1a	; 0xa1a <strnlen_P>
 556:	2c 01       	movw	r4, r24
 558:	2c 85       	ldd	r18, Y+12	; 0x0c
 55a:	20 68       	ori	r18, 0x80	; 128
 55c:	22 2e       	mov	r2, r18
 55e:	83 01       	movw	r16, r6
 560:	23 fc       	sbrc	r2, 3
 562:	1b c0       	rjmp	.+54     	; 0x59a <__stack+0x9b>
 564:	83 2d       	mov	r24, r3
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	48 16       	cp	r4, r24
 56a:	59 06       	cpc	r5, r25
 56c:	b0 f4       	brcc	.+44     	; 0x59a <__stack+0x9b>
 56e:	b7 01       	movw	r22, r14
 570:	80 e2       	ldi	r24, 0x20	; 32
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 578:	3a 94       	dec	r3
 57a:	f4 cf       	rjmp	.-24     	; 0x564 <__stack+0x65>
 57c:	f5 01       	movw	r30, r10
 57e:	27 fc       	sbrc	r2, 7
 580:	85 91       	lpm	r24, Z+
 582:	27 fe       	sbrs	r2, 7
 584:	81 91       	ld	r24, Z+
 586:	5f 01       	movw	r10, r30
 588:	b7 01       	movw	r22, r14
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 590:	31 10       	cpse	r3, r1
 592:	3a 94       	dec	r3
 594:	f1 e0       	ldi	r31, 0x01	; 1
 596:	4f 1a       	sub	r4, r31
 598:	51 08       	sbc	r5, r1
 59a:	41 14       	cp	r4, r1
 59c:	51 04       	cpc	r5, r1
 59e:	71 f7       	brne	.-36     	; 0x57c <__stack+0x7d>
 5a0:	e5 c0       	rjmp	.+458    	; 0x76c <__stack+0x26d>
 5a2:	84 36       	cpi	r24, 0x64	; 100
 5a4:	11 f0       	breq	.+4      	; 0x5aa <__stack+0xab>
 5a6:	89 36       	cpi	r24, 0x69	; 105
 5a8:	39 f5       	brne	.+78     	; 0x5f8 <__stack+0xf9>
 5aa:	f8 01       	movw	r30, r16
 5ac:	27 ff       	sbrs	r18, 7
 5ae:	07 c0       	rjmp	.+14     	; 0x5be <__stack+0xbf>
 5b0:	60 81       	ld	r22, Z
 5b2:	71 81       	ldd	r23, Z+1	; 0x01
 5b4:	82 81       	ldd	r24, Z+2	; 0x02
 5b6:	93 81       	ldd	r25, Z+3	; 0x03
 5b8:	0c 5f       	subi	r16, 0xFC	; 252
 5ba:	1f 4f       	sbci	r17, 0xFF	; 255
 5bc:	08 c0       	rjmp	.+16     	; 0x5ce <__stack+0xcf>
 5be:	60 81       	ld	r22, Z
 5c0:	71 81       	ldd	r23, Z+1	; 0x01
 5c2:	88 27       	eor	r24, r24
 5c4:	77 fd       	sbrc	r23, 7
 5c6:	80 95       	com	r24
 5c8:	98 2f       	mov	r25, r24
 5ca:	0e 5f       	subi	r16, 0xFE	; 254
 5cc:	1f 4f       	sbci	r17, 0xFF	; 255
 5ce:	2f 76       	andi	r18, 0x6F	; 111
 5d0:	b2 2e       	mov	r11, r18
 5d2:	97 ff       	sbrs	r25, 7
 5d4:	09 c0       	rjmp	.+18     	; 0x5e8 <__stack+0xe9>
 5d6:	90 95       	com	r25
 5d8:	80 95       	com	r24
 5da:	70 95       	com	r23
 5dc:	61 95       	neg	r22
 5de:	7f 4f       	sbci	r23, 0xFF	; 255
 5e0:	8f 4f       	sbci	r24, 0xFF	; 255
 5e2:	9f 4f       	sbci	r25, 0xFF	; 255
 5e4:	20 68       	ori	r18, 0x80	; 128
 5e6:	b2 2e       	mov	r11, r18
 5e8:	2a e0       	ldi	r18, 0x0A	; 10
 5ea:	30 e0       	ldi	r19, 0x00	; 0
 5ec:	a4 01       	movw	r20, r8
 5ee:	0e 94 5c 05 	call	0xab8	; 0xab8 <__ultoa_invert>
 5f2:	a8 2e       	mov	r10, r24
 5f4:	a8 18       	sub	r10, r8
 5f6:	44 c0       	rjmp	.+136    	; 0x680 <__stack+0x181>
 5f8:	85 37       	cpi	r24, 0x75	; 117
 5fa:	29 f4       	brne	.+10     	; 0x606 <__stack+0x107>
 5fc:	2f 7e       	andi	r18, 0xEF	; 239
 5fe:	b2 2e       	mov	r11, r18
 600:	2a e0       	ldi	r18, 0x0A	; 10
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	25 c0       	rjmp	.+74     	; 0x650 <__stack+0x151>
 606:	f2 2f       	mov	r31, r18
 608:	f9 7f       	andi	r31, 0xF9	; 249
 60a:	bf 2e       	mov	r11, r31
 60c:	8f 36       	cpi	r24, 0x6F	; 111
 60e:	c1 f0       	breq	.+48     	; 0x640 <__stack+0x141>
 610:	18 f4       	brcc	.+6      	; 0x618 <__stack+0x119>
 612:	88 35       	cpi	r24, 0x58	; 88
 614:	79 f0       	breq	.+30     	; 0x634 <__stack+0x135>
 616:	b4 c0       	rjmp	.+360    	; 0x780 <__stack+0x281>
 618:	80 37       	cpi	r24, 0x70	; 112
 61a:	19 f0       	breq	.+6      	; 0x622 <__stack+0x123>
 61c:	88 37       	cpi	r24, 0x78	; 120
 61e:	21 f0       	breq	.+8      	; 0x628 <__stack+0x129>
 620:	af c0       	rjmp	.+350    	; 0x780 <__stack+0x281>
 622:	2f 2f       	mov	r18, r31
 624:	20 61       	ori	r18, 0x10	; 16
 626:	b2 2e       	mov	r11, r18
 628:	b4 fe       	sbrs	r11, 4
 62a:	0d c0       	rjmp	.+26     	; 0x646 <__stack+0x147>
 62c:	8b 2d       	mov	r24, r11
 62e:	84 60       	ori	r24, 0x04	; 4
 630:	b8 2e       	mov	r11, r24
 632:	09 c0       	rjmp	.+18     	; 0x646 <__stack+0x147>
 634:	24 ff       	sbrs	r18, 4
 636:	0a c0       	rjmp	.+20     	; 0x64c <__stack+0x14d>
 638:	9f 2f       	mov	r25, r31
 63a:	96 60       	ori	r25, 0x06	; 6
 63c:	b9 2e       	mov	r11, r25
 63e:	06 c0       	rjmp	.+12     	; 0x64c <__stack+0x14d>
 640:	28 e0       	ldi	r18, 0x08	; 8
 642:	30 e0       	ldi	r19, 0x00	; 0
 644:	05 c0       	rjmp	.+10     	; 0x650 <__stack+0x151>
 646:	20 e1       	ldi	r18, 0x10	; 16
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	02 c0       	rjmp	.+4      	; 0x650 <__stack+0x151>
 64c:	20 e1       	ldi	r18, 0x10	; 16
 64e:	32 e0       	ldi	r19, 0x02	; 2
 650:	f8 01       	movw	r30, r16
 652:	b7 fe       	sbrs	r11, 7
 654:	07 c0       	rjmp	.+14     	; 0x664 <__stack+0x165>
 656:	60 81       	ld	r22, Z
 658:	71 81       	ldd	r23, Z+1	; 0x01
 65a:	82 81       	ldd	r24, Z+2	; 0x02
 65c:	93 81       	ldd	r25, Z+3	; 0x03
 65e:	0c 5f       	subi	r16, 0xFC	; 252
 660:	1f 4f       	sbci	r17, 0xFF	; 255
 662:	06 c0       	rjmp	.+12     	; 0x670 <__stack+0x171>
 664:	60 81       	ld	r22, Z
 666:	71 81       	ldd	r23, Z+1	; 0x01
 668:	80 e0       	ldi	r24, 0x00	; 0
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	0e 5f       	subi	r16, 0xFE	; 254
 66e:	1f 4f       	sbci	r17, 0xFF	; 255
 670:	a4 01       	movw	r20, r8
 672:	0e 94 5c 05 	call	0xab8	; 0xab8 <__ultoa_invert>
 676:	a8 2e       	mov	r10, r24
 678:	a8 18       	sub	r10, r8
 67a:	fb 2d       	mov	r31, r11
 67c:	ff 77       	andi	r31, 0x7F	; 127
 67e:	bf 2e       	mov	r11, r31
 680:	b6 fe       	sbrs	r11, 6
 682:	0b c0       	rjmp	.+22     	; 0x69a <__stack+0x19b>
 684:	2b 2d       	mov	r18, r11
 686:	2e 7f       	andi	r18, 0xFE	; 254
 688:	a5 14       	cp	r10, r5
 68a:	50 f4       	brcc	.+20     	; 0x6a0 <__stack+0x1a1>
 68c:	b4 fe       	sbrs	r11, 4
 68e:	0a c0       	rjmp	.+20     	; 0x6a4 <__stack+0x1a5>
 690:	b2 fc       	sbrc	r11, 2
 692:	08 c0       	rjmp	.+16     	; 0x6a4 <__stack+0x1a5>
 694:	2b 2d       	mov	r18, r11
 696:	2e 7e       	andi	r18, 0xEE	; 238
 698:	05 c0       	rjmp	.+10     	; 0x6a4 <__stack+0x1a5>
 69a:	7a 2c       	mov	r7, r10
 69c:	2b 2d       	mov	r18, r11
 69e:	03 c0       	rjmp	.+6      	; 0x6a6 <__stack+0x1a7>
 6a0:	7a 2c       	mov	r7, r10
 6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <__stack+0x1a7>
 6a4:	75 2c       	mov	r7, r5
 6a6:	24 ff       	sbrs	r18, 4
 6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <__stack+0x1c5>
 6aa:	fe 01       	movw	r30, r28
 6ac:	ea 0d       	add	r30, r10
 6ae:	f1 1d       	adc	r31, r1
 6b0:	80 81       	ld	r24, Z
 6b2:	80 33       	cpi	r24, 0x30	; 48
 6b4:	11 f4       	brne	.+4      	; 0x6ba <__stack+0x1bb>
 6b6:	29 7e       	andi	r18, 0xE9	; 233
 6b8:	09 c0       	rjmp	.+18     	; 0x6cc <__stack+0x1cd>
 6ba:	22 ff       	sbrs	r18, 2
 6bc:	06 c0       	rjmp	.+12     	; 0x6ca <__stack+0x1cb>
 6be:	73 94       	inc	r7
 6c0:	73 94       	inc	r7
 6c2:	04 c0       	rjmp	.+8      	; 0x6cc <__stack+0x1cd>
 6c4:	82 2f       	mov	r24, r18
 6c6:	86 78       	andi	r24, 0x86	; 134
 6c8:	09 f0       	breq	.+2      	; 0x6cc <__stack+0x1cd>
 6ca:	73 94       	inc	r7
 6cc:	23 fd       	sbrc	r18, 3
 6ce:	13 c0       	rjmp	.+38     	; 0x6f6 <__stack+0x1f7>
 6d0:	20 ff       	sbrs	r18, 0
 6d2:	06 c0       	rjmp	.+12     	; 0x6e0 <__stack+0x1e1>
 6d4:	5a 2c       	mov	r5, r10
 6d6:	73 14       	cp	r7, r3
 6d8:	18 f4       	brcc	.+6      	; 0x6e0 <__stack+0x1e1>
 6da:	53 0c       	add	r5, r3
 6dc:	57 18       	sub	r5, r7
 6de:	73 2c       	mov	r7, r3
 6e0:	73 14       	cp	r7, r3
 6e2:	68 f4       	brcc	.+26     	; 0x6fe <__stack+0x1ff>
 6e4:	b7 01       	movw	r22, r14
 6e6:	80 e2       	ldi	r24, 0x20	; 32
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	2c 87       	std	Y+12, r18	; 0x0c
 6ec:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 6f0:	73 94       	inc	r7
 6f2:	2c 85       	ldd	r18, Y+12	; 0x0c
 6f4:	f5 cf       	rjmp	.-22     	; 0x6e0 <__stack+0x1e1>
 6f6:	73 14       	cp	r7, r3
 6f8:	10 f4       	brcc	.+4      	; 0x6fe <__stack+0x1ff>
 6fa:	37 18       	sub	r3, r7
 6fc:	01 c0       	rjmp	.+2      	; 0x700 <__stack+0x201>
 6fe:	31 2c       	mov	r3, r1
 700:	24 ff       	sbrs	r18, 4
 702:	12 c0       	rjmp	.+36     	; 0x728 <__stack+0x229>
 704:	b7 01       	movw	r22, r14
 706:	80 e3       	ldi	r24, 0x30	; 48
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	2c 87       	std	Y+12, r18	; 0x0c
 70c:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 710:	2c 85       	ldd	r18, Y+12	; 0x0c
 712:	22 ff       	sbrs	r18, 2
 714:	17 c0       	rjmp	.+46     	; 0x744 <__stack+0x245>
 716:	21 ff       	sbrs	r18, 1
 718:	03 c0       	rjmp	.+6      	; 0x720 <__stack+0x221>
 71a:	88 e5       	ldi	r24, 0x58	; 88
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	02 c0       	rjmp	.+4      	; 0x724 <__stack+0x225>
 720:	88 e7       	ldi	r24, 0x78	; 120
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	b7 01       	movw	r22, r14
 726:	0c c0       	rjmp	.+24     	; 0x740 <__stack+0x241>
 728:	82 2f       	mov	r24, r18
 72a:	86 78       	andi	r24, 0x86	; 134
 72c:	59 f0       	breq	.+22     	; 0x744 <__stack+0x245>
 72e:	21 fd       	sbrc	r18, 1
 730:	02 c0       	rjmp	.+4      	; 0x736 <__stack+0x237>
 732:	80 e2       	ldi	r24, 0x20	; 32
 734:	01 c0       	rjmp	.+2      	; 0x738 <__stack+0x239>
 736:	8b e2       	ldi	r24, 0x2B	; 43
 738:	27 fd       	sbrc	r18, 7
 73a:	8d e2       	ldi	r24, 0x2D	; 45
 73c:	b7 01       	movw	r22, r14
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 744:	a5 14       	cp	r10, r5
 746:	38 f4       	brcc	.+14     	; 0x756 <__stack+0x257>
 748:	b7 01       	movw	r22, r14
 74a:	80 e3       	ldi	r24, 0x30	; 48
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 752:	5a 94       	dec	r5
 754:	f7 cf       	rjmp	.-18     	; 0x744 <__stack+0x245>
 756:	aa 94       	dec	r10
 758:	f4 01       	movw	r30, r8
 75a:	ea 0d       	add	r30, r10
 75c:	f1 1d       	adc	r31, r1
 75e:	80 81       	ld	r24, Z
 760:	b7 01       	movw	r22, r14
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 768:	a1 10       	cpse	r10, r1
 76a:	f5 cf       	rjmp	.-22     	; 0x756 <__stack+0x257>
 76c:	33 20       	and	r3, r3
 76e:	09 f4       	brne	.+2      	; 0x772 <__stack+0x273>
 770:	51 ce       	rjmp	.-862    	; 0x414 <vfprintf+0x24>
 772:	b7 01       	movw	r22, r14
 774:	80 e2       	ldi	r24, 0x20	; 32
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 77c:	3a 94       	dec	r3
 77e:	f6 cf       	rjmp	.-20     	; 0x76c <__stack+0x26d>
 780:	f7 01       	movw	r30, r14
 782:	86 81       	ldd	r24, Z+6	; 0x06
 784:	97 81       	ldd	r25, Z+7	; 0x07
 786:	02 c0       	rjmp	.+4      	; 0x78c <__stack+0x28d>
 788:	8f ef       	ldi	r24, 0xFF	; 255
 78a:	9f ef       	ldi	r25, 0xFF	; 255
 78c:	2c 96       	adiw	r28, 0x0c	; 12
 78e:	e2 e1       	ldi	r30, 0x12	; 18
 790:	0c 94 08 06 	jmp	0xc10	; 0xc10 <__epilogue_restores__>

00000794 <calloc>:
 794:	0f 93       	push	r16
 796:	1f 93       	push	r17
 798:	cf 93       	push	r28
 79a:	df 93       	push	r29
 79c:	86 9f       	mul	r24, r22
 79e:	80 01       	movw	r16, r0
 7a0:	87 9f       	mul	r24, r23
 7a2:	10 0d       	add	r17, r0
 7a4:	96 9f       	mul	r25, r22
 7a6:	10 0d       	add	r17, r0
 7a8:	11 24       	eor	r1, r1
 7aa:	c8 01       	movw	r24, r16
 7ac:	0e 94 e6 03 	call	0x7cc	; 0x7cc <malloc>
 7b0:	ec 01       	movw	r28, r24
 7b2:	00 97       	sbiw	r24, 0x00	; 0
 7b4:	29 f0       	breq	.+10     	; 0x7c0 <calloc+0x2c>
 7b6:	a8 01       	movw	r20, r16
 7b8:	60 e0       	ldi	r22, 0x00	; 0
 7ba:	70 e0       	ldi	r23, 0x00	; 0
 7bc:	0e 94 18 05 	call	0xa30	; 0xa30 <memset>
 7c0:	ce 01       	movw	r24, r28
 7c2:	df 91       	pop	r29
 7c4:	cf 91       	pop	r28
 7c6:	1f 91       	pop	r17
 7c8:	0f 91       	pop	r16
 7ca:	08 95       	ret

000007cc <malloc>:
 7cc:	cf 93       	push	r28
 7ce:	df 93       	push	r29
 7d0:	82 30       	cpi	r24, 0x02	; 2
 7d2:	91 05       	cpc	r25, r1
 7d4:	10 f4       	brcc	.+4      	; 0x7da <malloc+0xe>
 7d6:	82 e0       	ldi	r24, 0x02	; 2
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	e0 91 fe 01 	lds	r30, 0x01FE
 7de:	f0 91 ff 01 	lds	r31, 0x01FF
 7e2:	20 e0       	ldi	r18, 0x00	; 0
 7e4:	30 e0       	ldi	r19, 0x00	; 0
 7e6:	a0 e0       	ldi	r26, 0x00	; 0
 7e8:	b0 e0       	ldi	r27, 0x00	; 0
 7ea:	30 97       	sbiw	r30, 0x00	; 0
 7ec:	39 f1       	breq	.+78     	; 0x83c <malloc+0x70>
 7ee:	40 81       	ld	r20, Z
 7f0:	51 81       	ldd	r21, Z+1	; 0x01
 7f2:	48 17       	cp	r20, r24
 7f4:	59 07       	cpc	r21, r25
 7f6:	b8 f0       	brcs	.+46     	; 0x826 <malloc+0x5a>
 7f8:	48 17       	cp	r20, r24
 7fa:	59 07       	cpc	r21, r25
 7fc:	71 f4       	brne	.+28     	; 0x81a <malloc+0x4e>
 7fe:	82 81       	ldd	r24, Z+2	; 0x02
 800:	93 81       	ldd	r25, Z+3	; 0x03
 802:	10 97       	sbiw	r26, 0x00	; 0
 804:	29 f0       	breq	.+10     	; 0x810 <malloc+0x44>
 806:	13 96       	adiw	r26, 0x03	; 3
 808:	9c 93       	st	X, r25
 80a:	8e 93       	st	-X, r24
 80c:	12 97       	sbiw	r26, 0x02	; 2
 80e:	2c c0       	rjmp	.+88     	; 0x868 <malloc+0x9c>
 810:	90 93 ff 01 	sts	0x01FF, r25
 814:	80 93 fe 01 	sts	0x01FE, r24
 818:	27 c0       	rjmp	.+78     	; 0x868 <malloc+0x9c>
 81a:	21 15       	cp	r18, r1
 81c:	31 05       	cpc	r19, r1
 81e:	31 f0       	breq	.+12     	; 0x82c <malloc+0x60>
 820:	42 17       	cp	r20, r18
 822:	53 07       	cpc	r21, r19
 824:	18 f0       	brcs	.+6      	; 0x82c <malloc+0x60>
 826:	a9 01       	movw	r20, r18
 828:	db 01       	movw	r26, r22
 82a:	01 c0       	rjmp	.+2      	; 0x82e <malloc+0x62>
 82c:	ef 01       	movw	r28, r30
 82e:	9a 01       	movw	r18, r20
 830:	bd 01       	movw	r22, r26
 832:	df 01       	movw	r26, r30
 834:	02 80       	ldd	r0, Z+2	; 0x02
 836:	f3 81       	ldd	r31, Z+3	; 0x03
 838:	e0 2d       	mov	r30, r0
 83a:	d7 cf       	rjmp	.-82     	; 0x7ea <malloc+0x1e>
 83c:	21 15       	cp	r18, r1
 83e:	31 05       	cpc	r19, r1
 840:	f9 f0       	breq	.+62     	; 0x880 <malloc+0xb4>
 842:	28 1b       	sub	r18, r24
 844:	39 0b       	sbc	r19, r25
 846:	24 30       	cpi	r18, 0x04	; 4
 848:	31 05       	cpc	r19, r1
 84a:	80 f4       	brcc	.+32     	; 0x86c <malloc+0xa0>
 84c:	8a 81       	ldd	r24, Y+2	; 0x02
 84e:	9b 81       	ldd	r25, Y+3	; 0x03
 850:	61 15       	cp	r22, r1
 852:	71 05       	cpc	r23, r1
 854:	21 f0       	breq	.+8      	; 0x85e <malloc+0x92>
 856:	fb 01       	movw	r30, r22
 858:	93 83       	std	Z+3, r25	; 0x03
 85a:	82 83       	std	Z+2, r24	; 0x02
 85c:	04 c0       	rjmp	.+8      	; 0x866 <malloc+0x9a>
 85e:	90 93 ff 01 	sts	0x01FF, r25
 862:	80 93 fe 01 	sts	0x01FE, r24
 866:	fe 01       	movw	r30, r28
 868:	32 96       	adiw	r30, 0x02	; 2
 86a:	44 c0       	rjmp	.+136    	; 0x8f4 <malloc+0x128>
 86c:	fe 01       	movw	r30, r28
 86e:	e2 0f       	add	r30, r18
 870:	f3 1f       	adc	r31, r19
 872:	81 93       	st	Z+, r24
 874:	91 93       	st	Z+, r25
 876:	22 50       	subi	r18, 0x02	; 2
 878:	31 09       	sbc	r19, r1
 87a:	39 83       	std	Y+1, r19	; 0x01
 87c:	28 83       	st	Y, r18
 87e:	3a c0       	rjmp	.+116    	; 0x8f4 <malloc+0x128>
 880:	20 91 fc 01 	lds	r18, 0x01FC
 884:	30 91 fd 01 	lds	r19, 0x01FD
 888:	23 2b       	or	r18, r19
 88a:	41 f4       	brne	.+16     	; 0x89c <malloc+0xd0>
 88c:	20 91 06 01 	lds	r18, 0x0106
 890:	30 91 07 01 	lds	r19, 0x0107
 894:	30 93 fd 01 	sts	0x01FD, r19
 898:	20 93 fc 01 	sts	0x01FC, r18
 89c:	20 91 04 01 	lds	r18, 0x0104
 8a0:	30 91 05 01 	lds	r19, 0x0105
 8a4:	21 15       	cp	r18, r1
 8a6:	31 05       	cpc	r19, r1
 8a8:	41 f4       	brne	.+16     	; 0x8ba <malloc+0xee>
 8aa:	2d b7       	in	r18, 0x3d	; 61
 8ac:	3e b7       	in	r19, 0x3e	; 62
 8ae:	40 91 08 01 	lds	r20, 0x0108
 8b2:	50 91 09 01 	lds	r21, 0x0109
 8b6:	24 1b       	sub	r18, r20
 8b8:	35 0b       	sbc	r19, r21
 8ba:	e0 91 fc 01 	lds	r30, 0x01FC
 8be:	f0 91 fd 01 	lds	r31, 0x01FD
 8c2:	e2 17       	cp	r30, r18
 8c4:	f3 07       	cpc	r31, r19
 8c6:	a0 f4       	brcc	.+40     	; 0x8f0 <malloc+0x124>
 8c8:	2e 1b       	sub	r18, r30
 8ca:	3f 0b       	sbc	r19, r31
 8cc:	28 17       	cp	r18, r24
 8ce:	39 07       	cpc	r19, r25
 8d0:	78 f0       	brcs	.+30     	; 0x8f0 <malloc+0x124>
 8d2:	ac 01       	movw	r20, r24
 8d4:	4e 5f       	subi	r20, 0xFE	; 254
 8d6:	5f 4f       	sbci	r21, 0xFF	; 255
 8d8:	24 17       	cp	r18, r20
 8da:	35 07       	cpc	r19, r21
 8dc:	48 f0       	brcs	.+18     	; 0x8f0 <malloc+0x124>
 8de:	4e 0f       	add	r20, r30
 8e0:	5f 1f       	adc	r21, r31
 8e2:	50 93 fd 01 	sts	0x01FD, r21
 8e6:	40 93 fc 01 	sts	0x01FC, r20
 8ea:	81 93       	st	Z+, r24
 8ec:	91 93       	st	Z+, r25
 8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <malloc+0x128>
 8f0:	e0 e0       	ldi	r30, 0x00	; 0
 8f2:	f0 e0       	ldi	r31, 0x00	; 0
 8f4:	cf 01       	movw	r24, r30
 8f6:	df 91       	pop	r29
 8f8:	cf 91       	pop	r28
 8fa:	08 95       	ret

000008fc <free>:
 8fc:	cf 93       	push	r28
 8fe:	df 93       	push	r29
 900:	00 97       	sbiw	r24, 0x00	; 0
 902:	09 f4       	brne	.+2      	; 0x906 <free+0xa>
 904:	87 c0       	rjmp	.+270    	; 0xa14 <free+0x118>
 906:	fc 01       	movw	r30, r24
 908:	32 97       	sbiw	r30, 0x02	; 2
 90a:	13 82       	std	Z+3, r1	; 0x03
 90c:	12 82       	std	Z+2, r1	; 0x02
 90e:	c0 91 fe 01 	lds	r28, 0x01FE
 912:	d0 91 ff 01 	lds	r29, 0x01FF
 916:	20 97       	sbiw	r28, 0x00	; 0
 918:	81 f4       	brne	.+32     	; 0x93a <free+0x3e>
 91a:	20 81       	ld	r18, Z
 91c:	31 81       	ldd	r19, Z+1	; 0x01
 91e:	28 0f       	add	r18, r24
 920:	39 1f       	adc	r19, r25
 922:	80 91 fc 01 	lds	r24, 0x01FC
 926:	90 91 fd 01 	lds	r25, 0x01FD
 92a:	82 17       	cp	r24, r18
 92c:	93 07       	cpc	r25, r19
 92e:	79 f5       	brne	.+94     	; 0x98e <free+0x92>
 930:	f0 93 fd 01 	sts	0x01FD, r31
 934:	e0 93 fc 01 	sts	0x01FC, r30
 938:	6d c0       	rjmp	.+218    	; 0xa14 <free+0x118>
 93a:	de 01       	movw	r26, r28
 93c:	20 e0       	ldi	r18, 0x00	; 0
 93e:	30 e0       	ldi	r19, 0x00	; 0
 940:	ae 17       	cp	r26, r30
 942:	bf 07       	cpc	r27, r31
 944:	50 f4       	brcc	.+20     	; 0x95a <free+0x5e>
 946:	12 96       	adiw	r26, 0x02	; 2
 948:	4d 91       	ld	r20, X+
 94a:	5c 91       	ld	r21, X
 94c:	13 97       	sbiw	r26, 0x03	; 3
 94e:	9d 01       	movw	r18, r26
 950:	41 15       	cp	r20, r1
 952:	51 05       	cpc	r21, r1
 954:	09 f1       	breq	.+66     	; 0x998 <free+0x9c>
 956:	da 01       	movw	r26, r20
 958:	f3 cf       	rjmp	.-26     	; 0x940 <free+0x44>
 95a:	b3 83       	std	Z+3, r27	; 0x03
 95c:	a2 83       	std	Z+2, r26	; 0x02
 95e:	40 81       	ld	r20, Z
 960:	51 81       	ldd	r21, Z+1	; 0x01
 962:	84 0f       	add	r24, r20
 964:	95 1f       	adc	r25, r21
 966:	8a 17       	cp	r24, r26
 968:	9b 07       	cpc	r25, r27
 96a:	71 f4       	brne	.+28     	; 0x988 <free+0x8c>
 96c:	8d 91       	ld	r24, X+
 96e:	9c 91       	ld	r25, X
 970:	11 97       	sbiw	r26, 0x01	; 1
 972:	84 0f       	add	r24, r20
 974:	95 1f       	adc	r25, r21
 976:	02 96       	adiw	r24, 0x02	; 2
 978:	91 83       	std	Z+1, r25	; 0x01
 97a:	80 83       	st	Z, r24
 97c:	12 96       	adiw	r26, 0x02	; 2
 97e:	8d 91       	ld	r24, X+
 980:	9c 91       	ld	r25, X
 982:	13 97       	sbiw	r26, 0x03	; 3
 984:	93 83       	std	Z+3, r25	; 0x03
 986:	82 83       	std	Z+2, r24	; 0x02
 988:	21 15       	cp	r18, r1
 98a:	31 05       	cpc	r19, r1
 98c:	29 f4       	brne	.+10     	; 0x998 <free+0x9c>
 98e:	f0 93 ff 01 	sts	0x01FF, r31
 992:	e0 93 fe 01 	sts	0x01FE, r30
 996:	3e c0       	rjmp	.+124    	; 0xa14 <free+0x118>
 998:	d9 01       	movw	r26, r18
 99a:	13 96       	adiw	r26, 0x03	; 3
 99c:	fc 93       	st	X, r31
 99e:	ee 93       	st	-X, r30
 9a0:	12 97       	sbiw	r26, 0x02	; 2
 9a2:	4d 91       	ld	r20, X+
 9a4:	5d 91       	ld	r21, X+
 9a6:	a4 0f       	add	r26, r20
 9a8:	b5 1f       	adc	r27, r21
 9aa:	ea 17       	cp	r30, r26
 9ac:	fb 07       	cpc	r31, r27
 9ae:	79 f4       	brne	.+30     	; 0x9ce <free+0xd2>
 9b0:	80 81       	ld	r24, Z
 9b2:	91 81       	ldd	r25, Z+1	; 0x01
 9b4:	84 0f       	add	r24, r20
 9b6:	95 1f       	adc	r25, r21
 9b8:	02 96       	adiw	r24, 0x02	; 2
 9ba:	d9 01       	movw	r26, r18
 9bc:	11 96       	adiw	r26, 0x01	; 1
 9be:	9c 93       	st	X, r25
 9c0:	8e 93       	st	-X, r24
 9c2:	82 81       	ldd	r24, Z+2	; 0x02
 9c4:	93 81       	ldd	r25, Z+3	; 0x03
 9c6:	13 96       	adiw	r26, 0x03	; 3
 9c8:	9c 93       	st	X, r25
 9ca:	8e 93       	st	-X, r24
 9cc:	12 97       	sbiw	r26, 0x02	; 2
 9ce:	e0 e0       	ldi	r30, 0x00	; 0
 9d0:	f0 e0       	ldi	r31, 0x00	; 0
 9d2:	8a 81       	ldd	r24, Y+2	; 0x02
 9d4:	9b 81       	ldd	r25, Y+3	; 0x03
 9d6:	00 97       	sbiw	r24, 0x00	; 0
 9d8:	19 f0       	breq	.+6      	; 0x9e0 <free+0xe4>
 9da:	fe 01       	movw	r30, r28
 9dc:	ec 01       	movw	r28, r24
 9de:	f9 cf       	rjmp	.-14     	; 0x9d2 <free+0xd6>
 9e0:	ce 01       	movw	r24, r28
 9e2:	02 96       	adiw	r24, 0x02	; 2
 9e4:	28 81       	ld	r18, Y
 9e6:	39 81       	ldd	r19, Y+1	; 0x01
 9e8:	82 0f       	add	r24, r18
 9ea:	93 1f       	adc	r25, r19
 9ec:	20 91 fc 01 	lds	r18, 0x01FC
 9f0:	30 91 fd 01 	lds	r19, 0x01FD
 9f4:	28 17       	cp	r18, r24
 9f6:	39 07       	cpc	r19, r25
 9f8:	69 f4       	brne	.+26     	; 0xa14 <free+0x118>
 9fa:	30 97       	sbiw	r30, 0x00	; 0
 9fc:	29 f4       	brne	.+10     	; 0xa08 <free+0x10c>
 9fe:	10 92 ff 01 	sts	0x01FF, r1
 a02:	10 92 fe 01 	sts	0x01FE, r1
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <free+0x110>
 a08:	13 82       	std	Z+3, r1	; 0x03
 a0a:	12 82       	std	Z+2, r1	; 0x02
 a0c:	d0 93 fd 01 	sts	0x01FD, r29
 a10:	c0 93 fc 01 	sts	0x01FC, r28
 a14:	df 91       	pop	r29
 a16:	cf 91       	pop	r28
 a18:	08 95       	ret

00000a1a <strnlen_P>:
 a1a:	fc 01       	movw	r30, r24
 a1c:	05 90       	lpm	r0, Z+
 a1e:	61 50       	subi	r22, 0x01	; 1
 a20:	70 40       	sbci	r23, 0x00	; 0
 a22:	01 10       	cpse	r0, r1
 a24:	d8 f7       	brcc	.-10     	; 0xa1c <strnlen_P+0x2>
 a26:	80 95       	com	r24
 a28:	90 95       	com	r25
 a2a:	8e 0f       	add	r24, r30
 a2c:	9f 1f       	adc	r25, r31
 a2e:	08 95       	ret

00000a30 <memset>:
 a30:	dc 01       	movw	r26, r24
 a32:	01 c0       	rjmp	.+2      	; 0xa36 <memset+0x6>
 a34:	6d 93       	st	X+, r22
 a36:	41 50       	subi	r20, 0x01	; 1
 a38:	50 40       	sbci	r21, 0x00	; 0
 a3a:	e0 f7       	brcc	.-8      	; 0xa34 <memset+0x4>
 a3c:	08 95       	ret

00000a3e <strnlen>:
 a3e:	fc 01       	movw	r30, r24
 a40:	61 50       	subi	r22, 0x01	; 1
 a42:	70 40       	sbci	r23, 0x00	; 0
 a44:	01 90       	ld	r0, Z+
 a46:	01 10       	cpse	r0, r1
 a48:	d8 f7       	brcc	.-10     	; 0xa40 <strnlen+0x2>
 a4a:	80 95       	com	r24
 a4c:	90 95       	com	r25
 a4e:	8e 0f       	add	r24, r30
 a50:	9f 1f       	adc	r25, r31
 a52:	08 95       	ret

00000a54 <fputc>:
 a54:	0f 93       	push	r16
 a56:	1f 93       	push	r17
 a58:	cf 93       	push	r28
 a5a:	df 93       	push	r29
 a5c:	18 2f       	mov	r17, r24
 a5e:	09 2f       	mov	r16, r25
 a60:	eb 01       	movw	r28, r22
 a62:	8b 81       	ldd	r24, Y+3	; 0x03
 a64:	81 fd       	sbrc	r24, 1
 a66:	03 c0       	rjmp	.+6      	; 0xa6e <fputc+0x1a>
 a68:	8f ef       	ldi	r24, 0xFF	; 255
 a6a:	9f ef       	ldi	r25, 0xFF	; 255
 a6c:	20 c0       	rjmp	.+64     	; 0xaae <fputc+0x5a>
 a6e:	82 ff       	sbrs	r24, 2
 a70:	10 c0       	rjmp	.+32     	; 0xa92 <fputc+0x3e>
 a72:	4e 81       	ldd	r20, Y+6	; 0x06
 a74:	5f 81       	ldd	r21, Y+7	; 0x07
 a76:	2c 81       	ldd	r18, Y+4	; 0x04
 a78:	3d 81       	ldd	r19, Y+5	; 0x05
 a7a:	42 17       	cp	r20, r18
 a7c:	53 07       	cpc	r21, r19
 a7e:	7c f4       	brge	.+30     	; 0xa9e <fputc+0x4a>
 a80:	e8 81       	ld	r30, Y
 a82:	f9 81       	ldd	r31, Y+1	; 0x01
 a84:	9f 01       	movw	r18, r30
 a86:	2f 5f       	subi	r18, 0xFF	; 255
 a88:	3f 4f       	sbci	r19, 0xFF	; 255
 a8a:	39 83       	std	Y+1, r19	; 0x01
 a8c:	28 83       	st	Y, r18
 a8e:	10 83       	st	Z, r17
 a90:	06 c0       	rjmp	.+12     	; 0xa9e <fputc+0x4a>
 a92:	e8 85       	ldd	r30, Y+8	; 0x08
 a94:	f9 85       	ldd	r31, Y+9	; 0x09
 a96:	81 2f       	mov	r24, r17
 a98:	09 95       	icall
 a9a:	89 2b       	or	r24, r25
 a9c:	29 f7       	brne	.-54     	; 0xa68 <fputc+0x14>
 a9e:	2e 81       	ldd	r18, Y+6	; 0x06
 aa0:	3f 81       	ldd	r19, Y+7	; 0x07
 aa2:	2f 5f       	subi	r18, 0xFF	; 255
 aa4:	3f 4f       	sbci	r19, 0xFF	; 255
 aa6:	3f 83       	std	Y+7, r19	; 0x07
 aa8:	2e 83       	std	Y+6, r18	; 0x06
 aaa:	81 2f       	mov	r24, r17
 aac:	90 2f       	mov	r25, r16
 aae:	df 91       	pop	r29
 ab0:	cf 91       	pop	r28
 ab2:	1f 91       	pop	r17
 ab4:	0f 91       	pop	r16
 ab6:	08 95       	ret

00000ab8 <__ultoa_invert>:
 ab8:	fa 01       	movw	r30, r20
 aba:	aa 27       	eor	r26, r26
 abc:	28 30       	cpi	r18, 0x08	; 8
 abe:	51 f1       	breq	.+84     	; 0xb14 <__ultoa_invert+0x5c>
 ac0:	20 31       	cpi	r18, 0x10	; 16
 ac2:	81 f1       	breq	.+96     	; 0xb24 <__ultoa_invert+0x6c>
 ac4:	e8 94       	clt
 ac6:	6f 93       	push	r22
 ac8:	6e 7f       	andi	r22, 0xFE	; 254
 aca:	6e 5f       	subi	r22, 0xFE	; 254
 acc:	7f 4f       	sbci	r23, 0xFF	; 255
 ace:	8f 4f       	sbci	r24, 0xFF	; 255
 ad0:	9f 4f       	sbci	r25, 0xFF	; 255
 ad2:	af 4f       	sbci	r26, 0xFF	; 255
 ad4:	b1 e0       	ldi	r27, 0x01	; 1
 ad6:	3e d0       	rcall	.+124    	; 0xb54 <__ultoa_invert+0x9c>
 ad8:	b4 e0       	ldi	r27, 0x04	; 4
 ada:	3c d0       	rcall	.+120    	; 0xb54 <__ultoa_invert+0x9c>
 adc:	67 0f       	add	r22, r23
 ade:	78 1f       	adc	r23, r24
 ae0:	89 1f       	adc	r24, r25
 ae2:	9a 1f       	adc	r25, r26
 ae4:	a1 1d       	adc	r26, r1
 ae6:	68 0f       	add	r22, r24
 ae8:	79 1f       	adc	r23, r25
 aea:	8a 1f       	adc	r24, r26
 aec:	91 1d       	adc	r25, r1
 aee:	a1 1d       	adc	r26, r1
 af0:	6a 0f       	add	r22, r26
 af2:	71 1d       	adc	r23, r1
 af4:	81 1d       	adc	r24, r1
 af6:	91 1d       	adc	r25, r1
 af8:	a1 1d       	adc	r26, r1
 afa:	20 d0       	rcall	.+64     	; 0xb3c <__ultoa_invert+0x84>
 afc:	09 f4       	brne	.+2      	; 0xb00 <__ultoa_invert+0x48>
 afe:	68 94       	set
 b00:	3f 91       	pop	r19
 b02:	2a e0       	ldi	r18, 0x0A	; 10
 b04:	26 9f       	mul	r18, r22
 b06:	11 24       	eor	r1, r1
 b08:	30 19       	sub	r19, r0
 b0a:	30 5d       	subi	r19, 0xD0	; 208
 b0c:	31 93       	st	Z+, r19
 b0e:	de f6       	brtc	.-74     	; 0xac6 <__ultoa_invert+0xe>
 b10:	cf 01       	movw	r24, r30
 b12:	08 95       	ret
 b14:	46 2f       	mov	r20, r22
 b16:	47 70       	andi	r20, 0x07	; 7
 b18:	40 5d       	subi	r20, 0xD0	; 208
 b1a:	41 93       	st	Z+, r20
 b1c:	b3 e0       	ldi	r27, 0x03	; 3
 b1e:	0f d0       	rcall	.+30     	; 0xb3e <__ultoa_invert+0x86>
 b20:	c9 f7       	brne	.-14     	; 0xb14 <__ultoa_invert+0x5c>
 b22:	f6 cf       	rjmp	.-20     	; 0xb10 <__ultoa_invert+0x58>
 b24:	46 2f       	mov	r20, r22
 b26:	4f 70       	andi	r20, 0x0F	; 15
 b28:	40 5d       	subi	r20, 0xD0	; 208
 b2a:	4a 33       	cpi	r20, 0x3A	; 58
 b2c:	18 f0       	brcs	.+6      	; 0xb34 <__ultoa_invert+0x7c>
 b2e:	49 5d       	subi	r20, 0xD9	; 217
 b30:	31 fd       	sbrc	r19, 1
 b32:	40 52       	subi	r20, 0x20	; 32
 b34:	41 93       	st	Z+, r20
 b36:	02 d0       	rcall	.+4      	; 0xb3c <__ultoa_invert+0x84>
 b38:	a9 f7       	brne	.-22     	; 0xb24 <__ultoa_invert+0x6c>
 b3a:	ea cf       	rjmp	.-44     	; 0xb10 <__ultoa_invert+0x58>
 b3c:	b4 e0       	ldi	r27, 0x04	; 4
 b3e:	a6 95       	lsr	r26
 b40:	97 95       	ror	r25
 b42:	87 95       	ror	r24
 b44:	77 95       	ror	r23
 b46:	67 95       	ror	r22
 b48:	ba 95       	dec	r27
 b4a:	c9 f7       	brne	.-14     	; 0xb3e <__ultoa_invert+0x86>
 b4c:	00 97       	sbiw	r24, 0x00	; 0
 b4e:	61 05       	cpc	r22, r1
 b50:	71 05       	cpc	r23, r1
 b52:	08 95       	ret
 b54:	9b 01       	movw	r18, r22
 b56:	ac 01       	movw	r20, r24
 b58:	0a 2e       	mov	r0, r26
 b5a:	06 94       	lsr	r0
 b5c:	57 95       	ror	r21
 b5e:	47 95       	ror	r20
 b60:	37 95       	ror	r19
 b62:	27 95       	ror	r18
 b64:	ba 95       	dec	r27
 b66:	c9 f7       	brne	.-14     	; 0xb5a <__ultoa_invert+0xa2>
 b68:	62 0f       	add	r22, r18
 b6a:	73 1f       	adc	r23, r19
 b6c:	84 1f       	adc	r24, r20
 b6e:	95 1f       	adc	r25, r21
 b70:	a0 1d       	adc	r26, r0
 b72:	08 95       	ret

00000b74 <__divmodsi4>:
 b74:	05 2e       	mov	r0, r21
 b76:	97 fb       	bst	r25, 7
 b78:	1e f4       	brtc	.+6      	; 0xb80 <__divmodsi4+0xc>
 b7a:	00 94       	com	r0
 b7c:	0e 94 d1 05 	call	0xba2	; 0xba2 <__negsi2>
 b80:	57 fd       	sbrc	r21, 7
 b82:	07 d0       	rcall	.+14     	; 0xb92 <__divmodsi4_neg2>
 b84:	0e 94 23 06 	call	0xc46	; 0xc46 <__udivmodsi4>
 b88:	07 fc       	sbrc	r0, 7
 b8a:	03 d0       	rcall	.+6      	; 0xb92 <__divmodsi4_neg2>
 b8c:	4e f4       	brtc	.+18     	; 0xba0 <__divmodsi4_exit>
 b8e:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <__negsi2>

00000b92 <__divmodsi4_neg2>:
 b92:	50 95       	com	r21
 b94:	40 95       	com	r20
 b96:	30 95       	com	r19
 b98:	21 95       	neg	r18
 b9a:	3f 4f       	sbci	r19, 0xFF	; 255
 b9c:	4f 4f       	sbci	r20, 0xFF	; 255
 b9e:	5f 4f       	sbci	r21, 0xFF	; 255

00000ba0 <__divmodsi4_exit>:
 ba0:	08 95       	ret

00000ba2 <__negsi2>:
 ba2:	90 95       	com	r25
 ba4:	80 95       	com	r24
 ba6:	70 95       	com	r23
 ba8:	61 95       	neg	r22
 baa:	7f 4f       	sbci	r23, 0xFF	; 255
 bac:	8f 4f       	sbci	r24, 0xFF	; 255
 bae:	9f 4f       	sbci	r25, 0xFF	; 255
 bb0:	08 95       	ret

00000bb2 <__muluhisi3>:
 bb2:	0e 94 45 06 	call	0xc8a	; 0xc8a <__umulhisi3>
 bb6:	a5 9f       	mul	r26, r21
 bb8:	90 0d       	add	r25, r0
 bba:	b4 9f       	mul	r27, r20
 bbc:	90 0d       	add	r25, r0
 bbe:	a4 9f       	mul	r26, r20
 bc0:	80 0d       	add	r24, r0
 bc2:	91 1d       	adc	r25, r1
 bc4:	11 24       	eor	r1, r1
 bc6:	08 95       	ret

00000bc8 <__mulshisi3>:
 bc8:	b7 ff       	sbrs	r27, 7
 bca:	0c 94 d9 05 	jmp	0xbb2	; 0xbb2 <__muluhisi3>

00000bce <__mulohisi3>:
 bce:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <__muluhisi3>
 bd2:	82 1b       	sub	r24, r18
 bd4:	93 0b       	sbc	r25, r19
 bd6:	08 95       	ret

00000bd8 <__prologue_saves__>:
 bd8:	2f 92       	push	r2
 bda:	3f 92       	push	r3
 bdc:	4f 92       	push	r4
 bde:	5f 92       	push	r5
 be0:	6f 92       	push	r6
 be2:	7f 92       	push	r7
 be4:	8f 92       	push	r8
 be6:	9f 92       	push	r9
 be8:	af 92       	push	r10
 bea:	bf 92       	push	r11
 bec:	cf 92       	push	r12
 bee:	df 92       	push	r13
 bf0:	ef 92       	push	r14
 bf2:	ff 92       	push	r15
 bf4:	0f 93       	push	r16
 bf6:	1f 93       	push	r17
 bf8:	cf 93       	push	r28
 bfa:	df 93       	push	r29
 bfc:	cd b7       	in	r28, 0x3d	; 61
 bfe:	de b7       	in	r29, 0x3e	; 62
 c00:	ca 1b       	sub	r28, r26
 c02:	db 0b       	sbc	r29, r27
 c04:	0f b6       	in	r0, 0x3f	; 63
 c06:	f8 94       	cli
 c08:	de bf       	out	0x3e, r29	; 62
 c0a:	0f be       	out	0x3f, r0	; 63
 c0c:	cd bf       	out	0x3d, r28	; 61
 c0e:	09 94       	ijmp

00000c10 <__epilogue_restores__>:
 c10:	2a 88       	ldd	r2, Y+18	; 0x12
 c12:	39 88       	ldd	r3, Y+17	; 0x11
 c14:	48 88       	ldd	r4, Y+16	; 0x10
 c16:	5f 84       	ldd	r5, Y+15	; 0x0f
 c18:	6e 84       	ldd	r6, Y+14	; 0x0e
 c1a:	7d 84       	ldd	r7, Y+13	; 0x0d
 c1c:	8c 84       	ldd	r8, Y+12	; 0x0c
 c1e:	9b 84       	ldd	r9, Y+11	; 0x0b
 c20:	aa 84       	ldd	r10, Y+10	; 0x0a
 c22:	b9 84       	ldd	r11, Y+9	; 0x09
 c24:	c8 84       	ldd	r12, Y+8	; 0x08
 c26:	df 80       	ldd	r13, Y+7	; 0x07
 c28:	ee 80       	ldd	r14, Y+6	; 0x06
 c2a:	fd 80       	ldd	r15, Y+5	; 0x05
 c2c:	0c 81       	ldd	r16, Y+4	; 0x04
 c2e:	1b 81       	ldd	r17, Y+3	; 0x03
 c30:	aa 81       	ldd	r26, Y+2	; 0x02
 c32:	b9 81       	ldd	r27, Y+1	; 0x01
 c34:	ce 0f       	add	r28, r30
 c36:	d1 1d       	adc	r29, r1
 c38:	0f b6       	in	r0, 0x3f	; 63
 c3a:	f8 94       	cli
 c3c:	de bf       	out	0x3e, r29	; 62
 c3e:	0f be       	out	0x3f, r0	; 63
 c40:	cd bf       	out	0x3d, r28	; 61
 c42:	ed 01       	movw	r28, r26
 c44:	08 95       	ret

00000c46 <__udivmodsi4>:
 c46:	a1 e2       	ldi	r26, 0x21	; 33
 c48:	1a 2e       	mov	r1, r26
 c4a:	aa 1b       	sub	r26, r26
 c4c:	bb 1b       	sub	r27, r27
 c4e:	fd 01       	movw	r30, r26
 c50:	0d c0       	rjmp	.+26     	; 0xc6c <__udivmodsi4_ep>

00000c52 <__udivmodsi4_loop>:
 c52:	aa 1f       	adc	r26, r26
 c54:	bb 1f       	adc	r27, r27
 c56:	ee 1f       	adc	r30, r30
 c58:	ff 1f       	adc	r31, r31
 c5a:	a2 17       	cp	r26, r18
 c5c:	b3 07       	cpc	r27, r19
 c5e:	e4 07       	cpc	r30, r20
 c60:	f5 07       	cpc	r31, r21
 c62:	20 f0       	brcs	.+8      	; 0xc6c <__udivmodsi4_ep>
 c64:	a2 1b       	sub	r26, r18
 c66:	b3 0b       	sbc	r27, r19
 c68:	e4 0b       	sbc	r30, r20
 c6a:	f5 0b       	sbc	r31, r21

00000c6c <__udivmodsi4_ep>:
 c6c:	66 1f       	adc	r22, r22
 c6e:	77 1f       	adc	r23, r23
 c70:	88 1f       	adc	r24, r24
 c72:	99 1f       	adc	r25, r25
 c74:	1a 94       	dec	r1
 c76:	69 f7       	brne	.-38     	; 0xc52 <__udivmodsi4_loop>
 c78:	60 95       	com	r22
 c7a:	70 95       	com	r23
 c7c:	80 95       	com	r24
 c7e:	90 95       	com	r25
 c80:	9b 01       	movw	r18, r22
 c82:	ac 01       	movw	r20, r24
 c84:	bd 01       	movw	r22, r26
 c86:	cf 01       	movw	r24, r30
 c88:	08 95       	ret

00000c8a <__umulhisi3>:
 c8a:	a2 9f       	mul	r26, r18
 c8c:	b0 01       	movw	r22, r0
 c8e:	b3 9f       	mul	r27, r19
 c90:	c0 01       	movw	r24, r0
 c92:	a3 9f       	mul	r26, r19
 c94:	70 0d       	add	r23, r0
 c96:	81 1d       	adc	r24, r1
 c98:	11 24       	eor	r1, r1
 c9a:	91 1d       	adc	r25, r1
 c9c:	b2 9f       	mul	r27, r18
 c9e:	70 0d       	add	r23, r0
 ca0:	81 1d       	adc	r24, r1
 ca2:	11 24       	eor	r1, r1
 ca4:	91 1d       	adc	r25, r1
 ca6:	08 95       	ret

00000ca8 <_exit>:
 ca8:	f8 94       	cli

00000caa <__stop_program>:
 caa:	ff cf       	rjmp	.-2      	; 0xcaa <__stop_program>


ping_pong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000450  000004e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000450  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800106  00800106  000004ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004ea  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  0000051a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000305  00000000  00000000  0000057a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001de  00000000  00000000  0000087f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001fa  00000000  00000000  00000a5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000088  00000000  00000000  00000c58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000196  00000000  00000000  00000ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000045  00000000  00000000  00000e76  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00000ebb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 e5       	ldi	r30, 0x50	; 80
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 31       	cpi	r26, 0x12	; 18
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 85 00 	call	0x10a	; 0x10a <main>
  a6:	0c 94 26 02 	jmp	0x44c	; 0x44c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <UART_transmit>:

int UART_transmit(unsigned char data, FILE *stream){
	
	//Wait for empty transmit buffer
	
	while( !( UCSR0A & (1<<UDRE0)) );
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <UART_transmit>
 
	//Put data into buffer, sends the data
 
	UDR0 = data;
  b2:	8c b9       	out	0x0c, r24	; 12
	return 0; 
}
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	08 95       	ret

000000ba <UART_receive>:

unsigned char UART_receive(){

	//Wait for data to be received

	while( !(UCSR0A & (1<<RXC0)) );
  ba:	5f 9b       	sbis	0x0b, 7	; 11
  bc:	fe cf       	rjmp	.-4      	; 0xba <UART_receive>
 
	//Get and return received data from buffer
 
	return UDR0;
  be:	8c b1       	in	r24, 0x0c	; 12
}
  c0:	08 95       	ret

000000c2 <UART_init>:

int UART_init(unsigned int ubrr ){
/* 
Set baud rate
 */
	UBRR0L = ubrr;
  c2:	89 b9       	out	0x09, r24	; 9

/* 
Enable receiver and transmitter
 */
	UCSR0B =(1<<RXEN0)|(1<<TXEN0);
  c4:	88 e1       	ldi	r24, 0x18	; 24
  c6:	8a b9       	out	0x0a, r24	; 10
	
	uart = fdevopen(&UART_transmit, &UART_receive);
  c8:	6d e5       	ldi	r22, 0x5D	; 93
  ca:	70 e0       	ldi	r23, 0x00	; 0
  cc:	87 e5       	ldi	r24, 0x57	; 87
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 91 00 	call	0x122	; 0x122 <fdevopen>
  d4:	90 93 07 01 	sts	0x0107, r25
  d8:	80 93 06 01 	sts	0x0106, r24
	
	return 0; 
}
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	08 95       	ret

000000e2 <register_init>:
#ifndef REGISTER_INIT_H_
#define REGISTER_INIT_H_

void register_init(void){
	//Setter PA0-PA7 til output pins
	 set_bit(DDRA,PA7);
  e2:	d7 9a       	sbi	0x1a, 7	; 26
	 set_bit(DDRA,PA6);
  e4:	d6 9a       	sbi	0x1a, 6	; 26
	 set_bit(DDRA,PA5);
  e6:	d5 9a       	sbi	0x1a, 5	; 26
	 set_bit(DDRA,PA4);
  e8:	d4 9a       	sbi	0x1a, 4	; 26
	 set_bit(DDRA,PA3);
  ea:	d3 9a       	sbi	0x1a, 3	; 26
	 set_bit(DDRA,PA2);
  ec:	d2 9a       	sbi	0x1a, 2	; 26
	 set_bit(DDRA,PA1);
  ee:	d1 9a       	sbi	0x1a, 1	; 26
	 set_bit(DDRA,PA0);
  f0:	d0 9a       	sbi	0x1a, 0	; 26
	 
	 //Setter PC0-PC3 til output
	 set_bit(DDRC,DDC0);
  f2:	a0 9a       	sbi	0x14, 0	; 20
	 set_bit(DDRC,DDC1);
  f4:	a1 9a       	sbi	0x14, 1	; 20
	 set_bit(DDRC,DDC2);
  f6:	a2 9a       	sbi	0x14, 2	; 20
	 set_bit(DDRC,DDC3);
  f8:	a3 9a       	sbi	0x14, 3	; 20
	
	//enabler SRAM i MCU
	set_bit(MCUCR, SRE);
  fa:	85 b7       	in	r24, 0x35	; 53
  fc:	80 68       	ori	r24, 0x80	; 128
  fe:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR, XMM0);
 100:	80 b7       	in	r24, 0x30	; 48
 102:	88 60       	ori	r24, 0x08	; 8
 104:	80 bf       	out	0x30, r24	; 48
	
	//Setter ALE til output
	set_bit(DDRE, DDE1);
 106:	31 9a       	sbi	0x06, 1	; 6
 108:	08 95       	ret

0000010a <main>:
#include "register_init.h"

int main(void)
{
	
   UART_init(31);
 10a:	8f e1       	ldi	r24, 0x1F	; 31
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	0e 94 61 00 	call	0xc2	; 0xc2 <UART_init>
   
   register_init();
 112:	0e 94 71 00 	call	0xe2	; 0xe2 <register_init>
   
   
   
   
   set_bit(PORTE, PE1);
 116:	39 9a       	sbi	0x07, 1	; 7
   
   
   
   set_bit(PORTC, PC3);
 118:	ab 9a       	sbi	0x15, 3	; 21
   set_bit(PORTC, PC2);
 11a:	aa 9a       	sbi	0x15, 2	; 21
   set_bit(PORTC, PC1);
 11c:	a9 9a       	sbi	0x15, 1	; 21
   set_bit(PORTC, PC0);
 11e:	a8 9a       	sbi	0x15, 0	; 21
 120:	ff cf       	rjmp	.-2      	; 0x120 <main+0x16>

00000122 <fdevopen>:
 122:	0f 93       	push	r16
 124:	1f 93       	push	r17
 126:	cf 93       	push	r28
 128:	df 93       	push	r29
 12a:	ec 01       	movw	r28, r24
 12c:	8b 01       	movw	r16, r22
 12e:	00 97       	sbiw	r24, 0x00	; 0
 130:	31 f4       	brne	.+12     	; 0x13e <fdevopen+0x1c>
 132:	61 15       	cp	r22, r1
 134:	71 05       	cpc	r23, r1
 136:	19 f4       	brne	.+6      	; 0x13e <fdevopen+0x1c>
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	38 c0       	rjmp	.+112    	; 0x1ae <fdevopen+0x8c>
 13e:	6e e0       	ldi	r22, 0x0E	; 14
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <calloc>
 14a:	fc 01       	movw	r30, r24
 14c:	00 97       	sbiw	r24, 0x00	; 0
 14e:	a1 f3       	breq	.-24     	; 0x138 <fdevopen+0x16>
 150:	80 e8       	ldi	r24, 0x80	; 128
 152:	83 83       	std	Z+3, r24	; 0x03
 154:	01 15       	cp	r16, r1
 156:	11 05       	cpc	r17, r1
 158:	71 f0       	breq	.+28     	; 0x176 <fdevopen+0x54>
 15a:	13 87       	std	Z+11, r17	; 0x0b
 15c:	02 87       	std	Z+10, r16	; 0x0a
 15e:	81 e8       	ldi	r24, 0x81	; 129
 160:	83 83       	std	Z+3, r24	; 0x03
 162:	80 91 08 01 	lds	r24, 0x0108
 166:	90 91 09 01 	lds	r25, 0x0109
 16a:	89 2b       	or	r24, r25
 16c:	21 f4       	brne	.+8      	; 0x176 <fdevopen+0x54>
 16e:	f0 93 09 01 	sts	0x0109, r31
 172:	e0 93 08 01 	sts	0x0108, r30
 176:	20 97       	sbiw	r28, 0x00	; 0
 178:	c9 f0       	breq	.+50     	; 0x1ac <fdevopen+0x8a>
 17a:	d1 87       	std	Z+9, r29	; 0x09
 17c:	c0 87       	std	Z+8, r28	; 0x08
 17e:	83 81       	ldd	r24, Z+3	; 0x03
 180:	82 60       	ori	r24, 0x02	; 2
 182:	83 83       	std	Z+3, r24	; 0x03
 184:	80 91 0a 01 	lds	r24, 0x010A
 188:	90 91 0b 01 	lds	r25, 0x010B
 18c:	89 2b       	or	r24, r25
 18e:	71 f4       	brne	.+28     	; 0x1ac <fdevopen+0x8a>
 190:	f0 93 0b 01 	sts	0x010B, r31
 194:	e0 93 0a 01 	sts	0x010A, r30
 198:	80 91 0c 01 	lds	r24, 0x010C
 19c:	90 91 0d 01 	lds	r25, 0x010D
 1a0:	89 2b       	or	r24, r25
 1a2:	21 f4       	brne	.+8      	; 0x1ac <fdevopen+0x8a>
 1a4:	f0 93 0d 01 	sts	0x010D, r31
 1a8:	e0 93 0c 01 	sts	0x010C, r30
 1ac:	cf 01       	movw	r24, r30
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	08 95       	ret

000001b8 <calloc>:
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	86 9f       	mul	r24, r22
 1c2:	80 01       	movw	r16, r0
 1c4:	87 9f       	mul	r24, r23
 1c6:	10 0d       	add	r17, r0
 1c8:	96 9f       	mul	r25, r22
 1ca:	10 0d       	add	r17, r0
 1cc:	11 24       	eor	r1, r1
 1ce:	c8 01       	movw	r24, r16
 1d0:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <malloc>
 1d4:	ec 01       	movw	r28, r24
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	29 f0       	breq	.+10     	; 0x1e4 <calloc+0x2c>
 1da:	a8 01       	movw	r20, r16
 1dc:	60 e0       	ldi	r22, 0x00	; 0
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	0e 94 1f 02 	call	0x43e	; 0x43e <memset>
 1e4:	ce 01       	movw	r24, r28
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	1f 91       	pop	r17
 1ec:	0f 91       	pop	r16
 1ee:	08 95       	ret

000001f0 <malloc>:
 1f0:	cf 93       	push	r28
 1f2:	df 93       	push	r29
 1f4:	82 30       	cpi	r24, 0x02	; 2
 1f6:	91 05       	cpc	r25, r1
 1f8:	10 f4       	brcc	.+4      	; 0x1fe <malloc+0xe>
 1fa:	82 e0       	ldi	r24, 0x02	; 2
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	e0 91 10 01 	lds	r30, 0x0110
 202:	f0 91 11 01 	lds	r31, 0x0111
 206:	20 e0       	ldi	r18, 0x00	; 0
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	a0 e0       	ldi	r26, 0x00	; 0
 20c:	b0 e0       	ldi	r27, 0x00	; 0
 20e:	30 97       	sbiw	r30, 0x00	; 0
 210:	39 f1       	breq	.+78     	; 0x260 <malloc+0x70>
 212:	40 81       	ld	r20, Z
 214:	51 81       	ldd	r21, Z+1	; 0x01
 216:	48 17       	cp	r20, r24
 218:	59 07       	cpc	r21, r25
 21a:	b8 f0       	brcs	.+46     	; 0x24a <malloc+0x5a>
 21c:	48 17       	cp	r20, r24
 21e:	59 07       	cpc	r21, r25
 220:	71 f4       	brne	.+28     	; 0x23e <malloc+0x4e>
 222:	82 81       	ldd	r24, Z+2	; 0x02
 224:	93 81       	ldd	r25, Z+3	; 0x03
 226:	10 97       	sbiw	r26, 0x00	; 0
 228:	29 f0       	breq	.+10     	; 0x234 <malloc+0x44>
 22a:	13 96       	adiw	r26, 0x03	; 3
 22c:	9c 93       	st	X, r25
 22e:	8e 93       	st	-X, r24
 230:	12 97       	sbiw	r26, 0x02	; 2
 232:	2c c0       	rjmp	.+88     	; 0x28c <malloc+0x9c>
 234:	90 93 11 01 	sts	0x0111, r25
 238:	80 93 10 01 	sts	0x0110, r24
 23c:	27 c0       	rjmp	.+78     	; 0x28c <malloc+0x9c>
 23e:	21 15       	cp	r18, r1
 240:	31 05       	cpc	r19, r1
 242:	31 f0       	breq	.+12     	; 0x250 <malloc+0x60>
 244:	42 17       	cp	r20, r18
 246:	53 07       	cpc	r21, r19
 248:	18 f0       	brcs	.+6      	; 0x250 <malloc+0x60>
 24a:	a9 01       	movw	r20, r18
 24c:	db 01       	movw	r26, r22
 24e:	01 c0       	rjmp	.+2      	; 0x252 <malloc+0x62>
 250:	ef 01       	movw	r28, r30
 252:	9a 01       	movw	r18, r20
 254:	bd 01       	movw	r22, r26
 256:	df 01       	movw	r26, r30
 258:	02 80       	ldd	r0, Z+2	; 0x02
 25a:	f3 81       	ldd	r31, Z+3	; 0x03
 25c:	e0 2d       	mov	r30, r0
 25e:	d7 cf       	rjmp	.-82     	; 0x20e <malloc+0x1e>
 260:	21 15       	cp	r18, r1
 262:	31 05       	cpc	r19, r1
 264:	f9 f0       	breq	.+62     	; 0x2a4 <malloc+0xb4>
 266:	28 1b       	sub	r18, r24
 268:	39 0b       	sbc	r19, r25
 26a:	24 30       	cpi	r18, 0x04	; 4
 26c:	31 05       	cpc	r19, r1
 26e:	80 f4       	brcc	.+32     	; 0x290 <malloc+0xa0>
 270:	8a 81       	ldd	r24, Y+2	; 0x02
 272:	9b 81       	ldd	r25, Y+3	; 0x03
 274:	61 15       	cp	r22, r1
 276:	71 05       	cpc	r23, r1
 278:	21 f0       	breq	.+8      	; 0x282 <malloc+0x92>
 27a:	fb 01       	movw	r30, r22
 27c:	93 83       	std	Z+3, r25	; 0x03
 27e:	82 83       	std	Z+2, r24	; 0x02
 280:	04 c0       	rjmp	.+8      	; 0x28a <malloc+0x9a>
 282:	90 93 11 01 	sts	0x0111, r25
 286:	80 93 10 01 	sts	0x0110, r24
 28a:	fe 01       	movw	r30, r28
 28c:	32 96       	adiw	r30, 0x02	; 2
 28e:	44 c0       	rjmp	.+136    	; 0x318 <malloc+0x128>
 290:	fe 01       	movw	r30, r28
 292:	e2 0f       	add	r30, r18
 294:	f3 1f       	adc	r31, r19
 296:	81 93       	st	Z+, r24
 298:	91 93       	st	Z+, r25
 29a:	22 50       	subi	r18, 0x02	; 2
 29c:	31 09       	sbc	r19, r1
 29e:	39 83       	std	Y+1, r19	; 0x01
 2a0:	28 83       	st	Y, r18
 2a2:	3a c0       	rjmp	.+116    	; 0x318 <malloc+0x128>
 2a4:	20 91 0e 01 	lds	r18, 0x010E
 2a8:	30 91 0f 01 	lds	r19, 0x010F
 2ac:	23 2b       	or	r18, r19
 2ae:	41 f4       	brne	.+16     	; 0x2c0 <malloc+0xd0>
 2b0:	20 91 02 01 	lds	r18, 0x0102
 2b4:	30 91 03 01 	lds	r19, 0x0103
 2b8:	30 93 0f 01 	sts	0x010F, r19
 2bc:	20 93 0e 01 	sts	0x010E, r18
 2c0:	20 91 00 01 	lds	r18, 0x0100
 2c4:	30 91 01 01 	lds	r19, 0x0101
 2c8:	21 15       	cp	r18, r1
 2ca:	31 05       	cpc	r19, r1
 2cc:	41 f4       	brne	.+16     	; 0x2de <malloc+0xee>
 2ce:	2d b7       	in	r18, 0x3d	; 61
 2d0:	3e b7       	in	r19, 0x3e	; 62
 2d2:	40 91 04 01 	lds	r20, 0x0104
 2d6:	50 91 05 01 	lds	r21, 0x0105
 2da:	24 1b       	sub	r18, r20
 2dc:	35 0b       	sbc	r19, r21
 2de:	e0 91 0e 01 	lds	r30, 0x010E
 2e2:	f0 91 0f 01 	lds	r31, 0x010F
 2e6:	e2 17       	cp	r30, r18
 2e8:	f3 07       	cpc	r31, r19
 2ea:	a0 f4       	brcc	.+40     	; 0x314 <malloc+0x124>
 2ec:	2e 1b       	sub	r18, r30
 2ee:	3f 0b       	sbc	r19, r31
 2f0:	28 17       	cp	r18, r24
 2f2:	39 07       	cpc	r19, r25
 2f4:	78 f0       	brcs	.+30     	; 0x314 <malloc+0x124>
 2f6:	ac 01       	movw	r20, r24
 2f8:	4e 5f       	subi	r20, 0xFE	; 254
 2fa:	5f 4f       	sbci	r21, 0xFF	; 255
 2fc:	24 17       	cp	r18, r20
 2fe:	35 07       	cpc	r19, r21
 300:	48 f0       	brcs	.+18     	; 0x314 <malloc+0x124>
 302:	4e 0f       	add	r20, r30
 304:	5f 1f       	adc	r21, r31
 306:	50 93 0f 01 	sts	0x010F, r21
 30a:	40 93 0e 01 	sts	0x010E, r20
 30e:	81 93       	st	Z+, r24
 310:	91 93       	st	Z+, r25
 312:	02 c0       	rjmp	.+4      	; 0x318 <malloc+0x128>
 314:	e0 e0       	ldi	r30, 0x00	; 0
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	cf 01       	movw	r24, r30
 31a:	df 91       	pop	r29
 31c:	cf 91       	pop	r28
 31e:	08 95       	ret

00000320 <free>:
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	00 97       	sbiw	r24, 0x00	; 0
 326:	09 f4       	brne	.+2      	; 0x32a <free+0xa>
 328:	87 c0       	rjmp	.+270    	; 0x438 <free+0x118>
 32a:	fc 01       	movw	r30, r24
 32c:	32 97       	sbiw	r30, 0x02	; 2
 32e:	13 82       	std	Z+3, r1	; 0x03
 330:	12 82       	std	Z+2, r1	; 0x02
 332:	c0 91 10 01 	lds	r28, 0x0110
 336:	d0 91 11 01 	lds	r29, 0x0111
 33a:	20 97       	sbiw	r28, 0x00	; 0
 33c:	81 f4       	brne	.+32     	; 0x35e <free+0x3e>
 33e:	20 81       	ld	r18, Z
 340:	31 81       	ldd	r19, Z+1	; 0x01
 342:	28 0f       	add	r18, r24
 344:	39 1f       	adc	r19, r25
 346:	80 91 0e 01 	lds	r24, 0x010E
 34a:	90 91 0f 01 	lds	r25, 0x010F
 34e:	82 17       	cp	r24, r18
 350:	93 07       	cpc	r25, r19
 352:	79 f5       	brne	.+94     	; 0x3b2 <free+0x92>
 354:	f0 93 0f 01 	sts	0x010F, r31
 358:	e0 93 0e 01 	sts	0x010E, r30
 35c:	6d c0       	rjmp	.+218    	; 0x438 <free+0x118>
 35e:	de 01       	movw	r26, r28
 360:	20 e0       	ldi	r18, 0x00	; 0
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	ae 17       	cp	r26, r30
 366:	bf 07       	cpc	r27, r31
 368:	50 f4       	brcc	.+20     	; 0x37e <free+0x5e>
 36a:	12 96       	adiw	r26, 0x02	; 2
 36c:	4d 91       	ld	r20, X+
 36e:	5c 91       	ld	r21, X
 370:	13 97       	sbiw	r26, 0x03	; 3
 372:	9d 01       	movw	r18, r26
 374:	41 15       	cp	r20, r1
 376:	51 05       	cpc	r21, r1
 378:	09 f1       	breq	.+66     	; 0x3bc <free+0x9c>
 37a:	da 01       	movw	r26, r20
 37c:	f3 cf       	rjmp	.-26     	; 0x364 <free+0x44>
 37e:	b3 83       	std	Z+3, r27	; 0x03
 380:	a2 83       	std	Z+2, r26	; 0x02
 382:	40 81       	ld	r20, Z
 384:	51 81       	ldd	r21, Z+1	; 0x01
 386:	84 0f       	add	r24, r20
 388:	95 1f       	adc	r25, r21
 38a:	8a 17       	cp	r24, r26
 38c:	9b 07       	cpc	r25, r27
 38e:	71 f4       	brne	.+28     	; 0x3ac <free+0x8c>
 390:	8d 91       	ld	r24, X+
 392:	9c 91       	ld	r25, X
 394:	11 97       	sbiw	r26, 0x01	; 1
 396:	84 0f       	add	r24, r20
 398:	95 1f       	adc	r25, r21
 39a:	02 96       	adiw	r24, 0x02	; 2
 39c:	91 83       	std	Z+1, r25	; 0x01
 39e:	80 83       	st	Z, r24
 3a0:	12 96       	adiw	r26, 0x02	; 2
 3a2:	8d 91       	ld	r24, X+
 3a4:	9c 91       	ld	r25, X
 3a6:	13 97       	sbiw	r26, 0x03	; 3
 3a8:	93 83       	std	Z+3, r25	; 0x03
 3aa:	82 83       	std	Z+2, r24	; 0x02
 3ac:	21 15       	cp	r18, r1
 3ae:	31 05       	cpc	r19, r1
 3b0:	29 f4       	brne	.+10     	; 0x3bc <free+0x9c>
 3b2:	f0 93 11 01 	sts	0x0111, r31
 3b6:	e0 93 10 01 	sts	0x0110, r30
 3ba:	3e c0       	rjmp	.+124    	; 0x438 <free+0x118>
 3bc:	d9 01       	movw	r26, r18
 3be:	13 96       	adiw	r26, 0x03	; 3
 3c0:	fc 93       	st	X, r31
 3c2:	ee 93       	st	-X, r30
 3c4:	12 97       	sbiw	r26, 0x02	; 2
 3c6:	4d 91       	ld	r20, X+
 3c8:	5d 91       	ld	r21, X+
 3ca:	a4 0f       	add	r26, r20
 3cc:	b5 1f       	adc	r27, r21
 3ce:	ea 17       	cp	r30, r26
 3d0:	fb 07       	cpc	r31, r27
 3d2:	79 f4       	brne	.+30     	; 0x3f2 <free+0xd2>
 3d4:	80 81       	ld	r24, Z
 3d6:	91 81       	ldd	r25, Z+1	; 0x01
 3d8:	84 0f       	add	r24, r20
 3da:	95 1f       	adc	r25, r21
 3dc:	02 96       	adiw	r24, 0x02	; 2
 3de:	d9 01       	movw	r26, r18
 3e0:	11 96       	adiw	r26, 0x01	; 1
 3e2:	9c 93       	st	X, r25
 3e4:	8e 93       	st	-X, r24
 3e6:	82 81       	ldd	r24, Z+2	; 0x02
 3e8:	93 81       	ldd	r25, Z+3	; 0x03
 3ea:	13 96       	adiw	r26, 0x03	; 3
 3ec:	9c 93       	st	X, r25
 3ee:	8e 93       	st	-X, r24
 3f0:	12 97       	sbiw	r26, 0x02	; 2
 3f2:	e0 e0       	ldi	r30, 0x00	; 0
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	8a 81       	ldd	r24, Y+2	; 0x02
 3f8:	9b 81       	ldd	r25, Y+3	; 0x03
 3fa:	00 97       	sbiw	r24, 0x00	; 0
 3fc:	19 f0       	breq	.+6      	; 0x404 <free+0xe4>
 3fe:	fe 01       	movw	r30, r28
 400:	ec 01       	movw	r28, r24
 402:	f9 cf       	rjmp	.-14     	; 0x3f6 <free+0xd6>
 404:	ce 01       	movw	r24, r28
 406:	02 96       	adiw	r24, 0x02	; 2
 408:	28 81       	ld	r18, Y
 40a:	39 81       	ldd	r19, Y+1	; 0x01
 40c:	82 0f       	add	r24, r18
 40e:	93 1f       	adc	r25, r19
 410:	20 91 0e 01 	lds	r18, 0x010E
 414:	30 91 0f 01 	lds	r19, 0x010F
 418:	28 17       	cp	r18, r24
 41a:	39 07       	cpc	r19, r25
 41c:	69 f4       	brne	.+26     	; 0x438 <free+0x118>
 41e:	30 97       	sbiw	r30, 0x00	; 0
 420:	29 f4       	brne	.+10     	; 0x42c <free+0x10c>
 422:	10 92 11 01 	sts	0x0111, r1
 426:	10 92 10 01 	sts	0x0110, r1
 42a:	02 c0       	rjmp	.+4      	; 0x430 <free+0x110>
 42c:	13 82       	std	Z+3, r1	; 0x03
 42e:	12 82       	std	Z+2, r1	; 0x02
 430:	d0 93 0f 01 	sts	0x010F, r29
 434:	c0 93 0e 01 	sts	0x010E, r28
 438:	df 91       	pop	r29
 43a:	cf 91       	pop	r28
 43c:	08 95       	ret

0000043e <memset>:
 43e:	dc 01       	movw	r26, r24
 440:	01 c0       	rjmp	.+2      	; 0x444 <memset+0x6>
 442:	6d 93       	st	X+, r22
 444:	41 50       	subi	r20, 0x01	; 1
 446:	50 40       	sbci	r21, 0x00	; 0
 448:	e0 f7       	brcc	.-8      	; 0x442 <memset+0x4>
 44a:	08 95       	ret

0000044c <_exit>:
 44c:	f8 94       	cli

0000044e <__stop_program>:
 44e:	ff cf       	rjmp	.-2      	; 0x44e <__stop_program>
